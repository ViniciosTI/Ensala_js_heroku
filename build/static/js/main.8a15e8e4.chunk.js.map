{"version":3,"sources":["componentes/Request.js","telas/login.js","componentes/corpo.js","telas/home.js","componentes/inputsPadroes.js","componentes/utilidadePublica.js","componentes/paginacao-plugin.js","componentes/paginacao.js","componentes/botoes.js","telas/modalidade.js","telas/professor.js","telas/areaConhecimento.js","telas/unidadeCurricular.js","telas/gerenciarEmailsProfessores.js","telas/disponibilidade.js","telas/gerenciarCompetencia.js","telas/cadastroTelaInicial.js","telas/componentes/relacionamentoUnidadeCurricular.js","telas/esqueciMinhaSenha.js","telas/finalizarCadastro.js","telas/alterarSenha.js","telas/ConsultaDisponibilidade.js","telas/ConsultaCompetencia.js","telas/logout.js","componentes/Autenticacao.js","App.js","serviceWorker.js","index.js","img/senai.png","img/sesi.png"],"names":["base","process","context","headers","Content-type","POST","path","o","f","callback","fetch","method","body","btoa","JSON","stringify","then","result","ok","json","catch","err","undefined","ERRO","console","log","status","GET","DELETE","PUT","alertaErros","EMAIL_ERRADO","alert","INSERIR_ERROR","ALTERAR_ERROR","REMOVER_ERROR","SELECIONAR_ERROR","LOGIN_ERRO","SEM_AUTORIZACAO","window","location","href","EMAIL_EM_USO_ERROR","MATRICULA_USO_ERROR","NOME_JA_CADASTRADO","ERRO_ENVIAR_EMAIL","EMAIL_NAO_ENCONTRADO","USUARIO_JA_CADASTRADO","IMPOSSIVEL_REATIVAR","text","errorMessage","Loading","_ref","loading","message","react_default","a","createElement","className","dist_default","name","fadeIn","color","Login","props","_this","Object","classCallCheck","this","_super","call","logar","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","token","sent","setId","professor","id","setUsuario","nome","setPermissao","permissao","setToken","setCookies","login","history","push","stop","_x","apply","arguments","state","usuario","senha","setState","target","value","user","memoriaUrl","event","toLowerCase","replaceAll","Container","Row","Col","sm","size","order","offset","onSubmit","handleSubmit","align","src","logoSESI","alt","logoSENAI","InputGroup","Input","placeholder","onChange","bind","type","setSenha","Button","block","onClick","cadastroProfessor","esqueciMinhaSenha","React","Component","withRouter","ContainerFade","Fade","children","BarraDePesquisa","_this$props","funcPesquisa","pesquisa","indicador","lista","filter","toString","includes","e","attBarra","handle","InputGroupAddon","addonType","getPesquisa","index_esm","BarraInicial","_this$props2","exec","colspan","Navegacao","cookieUrl","_this2","assertThisInitialized","url","Cookies","set","_this3","backPaste","Nav","vertical","corpo_LinhaImaginaria","linha","react_router_dom","to","style","width","display","justifyContent","Cabecalho","corpo_Status","Status","spin","foo","inicial","pop","texto","verificaEstadoEmail","ANDAMENTO","_this4","ACABOU","TimerEmail","_this5","verificaEmail","timer","setInterval","_this6","clearInterval","_this$state","ic","Spinner","t","ToastHeader","icon","UncontrolledPopover","trigger","placement","PopoverHeader","PopoverBody","padding","float","LinhaImaginaria","Fragment","ModalDetalhe","modal","modalTabela","toggleTabela","_this7","toggle","redirect","prevState","_this8","_this$props3","manha","tarde","noite","modalidade","areaConhecimento","unidadeCurricular","destaque","Modal","isOpen","ModalHeader","ModalBody","email","matricula","tipo","telefone","map","res","i","length","ModalFooter","marginTop","Table","focus","backgroundColor","key","descricao","corpo_BarraInicial","EmailDeConfirmacao","reenviar","borderColor","CampoObrigat√≥rio","Home","corpo_Cabecalho","corpo_Navegacao","InputDefault","evento","limitSize","titulo","valor","obrigatorio","disabled","FormGroup","Label","for","corpo_CampoObrigat_rio","handleChange","ArrayCompare","lista1","lista2","teste","Array","isArray","LEFT_PAGE","RIGHT_PAGE","range","from","step","Pagination","gotoPage","page","_this$props$onPageCha","onPageChanged","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","handleClick","evt","preventDefault","handleMoveLeft","cal","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","concat","toConsumableArray","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","ceil","defineProperty","_this$props$totalReco","_this$props$pageLimit","aria-label","index","aria-hidden","Paginacao","listaCorrente","buttons","10","25","50","100","setPageLimit","data","slice","atualizaLista","retornaLista","calculo","botao","zerarBotoes","b10","b25","b50","b100","total","paginacao_plugin","marginLeft","fontSize","setBotoes","BotaoEnviar","enviar","outline","BotaoResetar","resetar","Modalidade","id__","nome__","descricao__","form","listaCache","barraPesquisa","inserir","buscar","Error","finally","removerLinha","_callee2","_context2","alterar","_callee3","_context3","buscarPorId","_callee4","_context4","limparFormlulario__","preencheId__","preencheNome__","preencheDescricao__","isEmpty","_callee5","_context5","_callee6","listaFiltrada","_context6","Request_Loading","corpo_ContainerFade","toggleForm","xs","inputsPadroes_InputDefault","preencheNome","preencheDescricao","botoes_BotaoResetar","limparFormlulario","botoes_BotaoEnviar","enviaFormulario","corpo_BarraDePesquisa","preencheBarraDePesquisa","paginacao","getRetornaListaCorrente","confirm","enviaFormulario__","Professor","confirmar","email__","telefone__","permissao__","senha__","confirmar__","matricula__","tipo__","mudaSenha","inativos","toggleModalConfirmacao","tokenCadastroCache","toggleModalConfirmacaoFunc","tipoLista","PROFESSOR","novaLista","ADMINISTRADOR","preencheEmail__","preencheTelefone__","preenchePermissao__","preencheTipo__","preencheMatricula__","maskTelefone","st","equals","isEmail","_callee7","_context7","_callee8","_context8","md","preencheMatricula","preencheTipo","preencheEmail","preenchePermissao","preencheTelefone","preencheSenha","preencheConfirmar","toggleInativos","reativarProfessor","toggleMudaSenha","preencheSenha__","preencheConfirmar__","corpo_EmailDeConfirmacao","reenviarEmail","AreaConhecimento","relacionar","UnidadeCurricular","GerenciarEmailsProfessores","check","assunto","corpoEmail","desativar","checkBox","enviarEmail","listaEnviar","_o","enviarTodosEmails","listaAux","item","preencheAssunto","preencheCorpoEmail","checked","checkToggle","preencheCheckbox","Disponibilidade","html","disableCheckbox","segM","segT","segN","terM","terT","terN","quaM","quaT","quaN","quiM","quiT","quiN","sexM","sexT","sexN","sabM","sabT","sabN","domM","domT","domN","attItem","permissaoStatus","buscaItem","limpaItem","limpaDescricao","disponibilidade","it","keys","compoemTabela","b","v","auxilar","aProps","getOwnPropertyNames","setStatbe","splice","enviaItem","_this$state$item","formatDate","textAlign","Competencia","listaProfessores","unidadeCurricularListaPesquisa","unidadeCurricularListaTouch","cacheModalidade","cacheUnidadeCurricular","cacheAreaConhecimento","count","touchUnidadeCurricular","buscarProfessores","setCheck","setUnidadeCurricular","getModalidade","getAreaConhecimento","getUnidadeCurricular","limparCheck","forEach","areaconhecimento","elem","newLista","elemUnidade","unidadecurricular","carregamentoInicial","finalizarCarregamentoInicial","setModalidade","setAreaConhecimento","ForEachItemArray","_callee9","_context9","_callee10","_context10","list","aux","filterCheck","objectSpread2","_callee11","_context11","sort","localeCompare","borderTop","organizaListaPorNome","checkToggleModalidade","checkToggleAreaConhecimento","Autocomplete","options","getOptionLabel","option","renderInput","params","TextField","assign","variant","label","checkToggleUnidadeCurricular","CadastroTelaInicial","RelacionamentoUnidadeCurricular","match","voltarAreaConhecimento","atualizarUnidadeCurricular","atualizarLista","elemLista","idLista","decisao","req","marginBottom","click","EsqueciMinhaSenha","FinalizarCadastro","resultado","voltarTelaInicial","AlterarSenha","sucesso","baba","AlterarSenhaFail","ConsultaDisponibilidade","segunda","terca","quarta","quinta","sexta","sabado","domingo","getListaProfessores","pegaProfessor","getDisponibilidade","getAreaconhecimento","getUnidadecurricular","_step","_iterator","createForOfIteratorHelper","s","n","done","disp","substr","param","t0","dia","abrupt","setPesquisa","setcheck","boo","corpo_ModalDetalhe","professorInfo","ConsultaCompetencia","valueModalidade","valueAreaConhecimento","valueUnidadeCurricular","professorModalidade","professorAreaconhecimento","professorUnidadecurricular","touchModalidade","touchAreaConhecimento","amountList","listaAntiga","listNova","getProfessorModalidade","getProfessorAreaconhecimento","getProfessorUnidadecurricular","newArray","arrayVelho","arrayNovo","p","listaM","multiple","Logout","logout","userContext","createContext","Autenticacao","inOut","get","setUserWithCookies","remove","Provider","Consumer","react_router","exact","cadastroTelaInicial","alterarSenha_AlterarSenha","alterarSenha_AlterarSenhaFail","finalizarCadastro","telas_logout","Autenticacao_RotaPrivada","home","relacionamentoUnidadeCurricular","telas_professor","telas_modalidade","telas_areaConhecimento","telas_unidadeCurricular","gerenciarEmailsProfessores","gerenciarCompetencia","telas_ConsultaDisponibilidade","telas_ConsultaCompetencia","RotaPrivada","_React$Component2","inherits","_super2","createSuper","createClass","pathname","App","componentes_Autenticacao","Boolean","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.8a15e8e4.chunk.js","sourcesContent":["import React from 'react'\r\nimport Spinner from 'react-spinkit'\r\n\r\nconst base = process.env.REACT_APP_SERVER_URL;\r\nconst door = process.env.REACT_APP_SERVER_PORT;\r\nconst context = process.env.REACT_APP_SERVER_CONTEXT;\r\nconst headers = { \"Content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\r\nexport const POST = (path, o, f, callback) => {\r\n    return fetch(base + door + context + path, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: btoa(JSON.stringify(o))\r\n    }).then(result => {\r\n        if (!result.ok) throw result;\r\n        if (callback) callback(result.ok)\r\n        return result.json();\r\n    }).catch(err => {\r\n        if (f || f === undefined) ERRO(err)\r\n        console.log('Status Code POST: ' + err.status);\r\n    })\r\n}\r\nexport const GET = (path, f) => {\r\n    return fetch(base + door + context + path, {\r\n        method: 'GET',\r\n        headers: headers,\r\n    }).then(result => {\r\n        if (!result.ok) throw result;\r\n        return result.json();\r\n    }).catch(err => {\r\n        if (f || f === undefined) ERRO(err)\r\n        console.log('Status Code GET: ' + err.status)\r\n        throw err\r\n    })\r\n}\r\nexport const DELETE = (path, f) => {\r\n    return fetch(base + door + context + path, {\r\n        method: 'DELETE',\r\n        headers: headers,\r\n    }).then(result => {\r\n        if (!result.ok) throw result;\r\n        return result.json();\r\n    }).catch(err => {\r\n        if (f || f === undefined) ERRO(err)\r\n        console.log('Status Code remover: ' + err.status);\r\n    })\r\n}\r\nexport const PUT = (path, o, f) => {\r\n    return fetch(base + door + context + path, {\r\n        method: 'PUT',\r\n        headers: headers,\r\n        body: btoa(JSON.stringify(o))\r\n    }).then(result => {\r\n        if (!result.ok) throw result;\r\n        return result.json();\r\n    }).catch(err => {\r\n        if (f || f === undefined) ERRO(err)\r\n        console.log('Status Code PUT: ' + err.status);\r\n    })\r\n}\r\n\r\nconst alertaErros = {\r\n    EMAIL_ERRADO: () => {\r\n        alert(\"Ops! N√£o podemos trocar seu e-mail.\")\r\n    },\r\n    INSERIR_ERROR: () => {\r\n        alert(\"Ops! Erro ao inserir.\")\r\n    },\r\n    ALTERAR_ERROR: () => {\r\n        alert(\"Ops! Erro ao alterar.\")\r\n    },\r\n    REMOVER_ERROR: () => {\r\n        alert(\"Ops! Erro ao remover.\")\r\n    },\r\n    SELECIONAR_ERROR: () => {\r\n        alert(\"Ops! Erro ao selecionar.\")\r\n    },\r\n    LOGIN_ERRO: () => {\r\n        alert(\"Usuario ou senha escrito incorretamente.\")\r\n    },\r\n    SEM_AUTORIZACAO: () => {\r\n        alert(\"Opa! Voc√™ n√£o foi autorizado a usar esse recurso! Volte para tela de login.\")\r\n        window.location.href = \"/logout\";\r\n    },\r\n    EMAIL_EM_USO_ERROR: () => {\r\n        alert(\"Este email j√° esta sendo usado.\")\r\n    },\r\n    MATRICULA_USO_ERROR: () => {\r\n        alert(\"Esta matr√≠cula j√° foi cadastrada.\")\r\n    },\r\n    NOME_JA_CADASTRADO: () => {\r\n        alert(\"Esse nome j√° foi cadastrado.\")\r\n    },\r\n    ERRO_ENVIAR_EMAIL: () => {\r\n        alert(\"Erro ao tentar enviar o e-mail.\")\r\n    },\r\n    EMAIL_NAO_ENCONTRADO: () => {\r\n        alert(\"Este e-mail n√£o foi encontrado.\")\r\n    },\r\n    USUARIO_JA_CADASTRADO: () => {\r\n        alert(\"Seu cadastro ja foi efetuado, pode realizar seu login.\")\r\n        window.location.href = \"/\";\r\n    },\r\n    IMPOSSIVEL_REATIVAR: () => {\r\n        alert(\"√â imposs√≠vel reativar esse usu√°rio, pois existe um usu√°rio ativo com o mesmo e-mail.\")\r\n    }\r\n}\r\n\r\nexport const ERRO = (err) => {\r\n    if (err.status === undefined) alert(\"Ops! O servidor n√£o est√° respondendo.\\nPor favor, aguarde um momento e tente novamente.\")\r\n    if (err.status >= 500)\r\n        err.text().then(errorMessage => {\r\n            console.log(errorMessage)\r\n            if (errorMessage != undefined) alertaErros[errorMessage]()\r\n        })\r\n    else\r\n        if (err.status >= 400) alert(\"Ops! Erro: \" + err.status + \" \\nO servidor n√£o conseguiu processar esta requisi√ß√£o.\")\r\n\r\n}\r\n\r\n\r\nexport const Loading = ({ loading, message }) => {\r\n    return loading ? (\r\n        <div className='overlay-content'>\r\n            <div className='wrapper'>\r\n                <Spinner\r\n                    name='pacman'\r\n                    fadeIn='none'\r\n                    color='yellow'\r\n                />\r\n                <span className='message'>\r\n                    {message}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    ) : null\r\n}\r\n\r\n","import React from 'react';\r\nimport logoSENAI from '../img/senai.png';\r\nimport logoSESI from '../img/sesi.png';\r\nimport { Row, Col, Container, Button, InputGroup, Input } from 'reactstrap';\r\nimport { POST } from \"../componentes/Request\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      usuario: \"\",\r\n      senha: \"\"\r\n    }\r\n  }\r\n  setUsuario(usuario) {\r\n    this.setState({ usuario: usuario.target.value });\r\n  }\r\n  setSenha(senha) {\r\n    this.setState({ senha: senha.target.value });\r\n  }\r\n  componentDidMount() {\r\n    this.props.history.push(this.props.user.memoriaUrl())\r\n  }\r\n  logar = async o => {\r\n    let response = await POST('login/autenticacao', o, this.token)\r\n\r\n    if (response !== undefined & response !== 0 & response !== \"\") {\r\n\r\n      await this.props.setId(response.professor.id)\r\n      await this.props.setUsuario(response.professor.nome)\r\n      await this.props.setPermissao(response.professor.permissao)\r\n      await this.props.setToken(response.token)\r\n      await this.props.setCookies()\r\n      await this.props.login()\r\n\r\n      this.props.history.push(\"/home\")\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    var o = {};\r\n    o.usuario = this.state.usuario.toLowerCase().replaceAll(\" \", \"\")\r\n    o.senha = this.state.senha\r\n    this.logar(o);\r\n  }\r\n\r\n  cadastroProfessor() {\r\n    this.props.history.push(\"/cadastroTelaInicial\")\r\n  }\r\n  esqueciMinhaSenha() {\r\n    this.props.history.push(\"/esqueciMinhaSenha\")\r\n  }\r\n  render() {\r\n    return <div className=\"body\">\r\n      <Container>\r\n        <Row>\r\n          <Col sm={{ size: 4, order: 1, offset: 4 }}>\r\n            <form className=\"linhacontainer formulario\" onSubmit={this.handleSubmit}>\r\n              <div align=\"center\">\r\n                <h1 className=\"txtLogo\">Login</h1>\r\n              </div>\r\n              <Row>\r\n                <Col>\r\n                  <img src={logoSESI} className=\"App-logo\" alt=\"logo\" />\r\n                </Col>\r\n                <Col>\r\n                  <img src={logoSENAI} className=\"App-logo\" alt=\"logo\" />\r\n                </Col>\r\n              </Row>\r\n              <InputGroup>\r\n                <Input placeholder=\"E-mail:\" name=\"usuario\" value={this.state.usuario} onChange={this.setUsuario.bind(this)} />\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <Input type=\"password\" className=\"empurrar\" name=\"senha\" placeholder=\"Senha:\" value={this.state.senha} onChange={this.setSenha.bind(this)} />\r\n              </InputGroup>\r\n              <div className=\"botaoLogin\">\r\n                <Button block onClick={this.handleSubmit.bind(this)} className=\"btn-login\">Entrar</Button>\r\n              </div>\r\n              <Row>\r\n                <Col>\r\n                  <button className=\"btn_telaInicial\" type=\"button\" onClick={this.cadastroProfessor.bind(this)}>Cadastre-se</button>\r\n                </Col>\r\n                <Col>\r\n                  <button className=\"btn_telaInicial\" type=\"button\" onClick={this.esqueciMinhaSenha.bind(this)}>Esqueci minha senha</button>\r\n                </Col>\r\n              </Row>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  }\r\n}\r\nexport default withRouter(Login)","import React from 'react'\r\nimport { UncontrolledPopover, Table, Modal, ModalHeader, ModalBody, ModalFooter, PopoverHeader, PopoverBody, ToastHeader, Spinner, Nav, Fade, Row, Col, Input, InputGroup, InputGroupAddon, Button } from \"reactstrap\";\r\nimport logoSENAI from './../img/senai.png';\r\nimport logoSESI from './../img/sesi.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport { GET } from \"./Request\";\r\nimport Cookies from 'js-cookie';\r\nimport { FaSearch, FaClipboard } from \"react-icons/fa\";\r\n\r\n\r\nclass ContainerFade extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"containerCorpo\">\r\n                <Fade>\r\n                    {this.props.children}\r\n                </Fade>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass BarraDePesquisa extends React.Component {\r\n    getPesquisa() {\r\n        const { funcPesquisa, pesquisa, indicador, lista } = this.props\r\n\r\n        let novaLista = []\r\n        novaLista = lista.filter((value) => {\r\n            return value[indicador].toString().includes(pesquisa) ? true : false\r\n        })\r\n        funcPesquisa(novaLista)\r\n    }\r\n    handle(e) {\r\n        this.props.attBarra(e.target.value.toString())\r\n    }\r\n    render() {\r\n        return <InputGroup className=\"w-100\">\r\n            <Input value={this.props.pesquisa} onChange={this.handle.bind(this)} name=\"pesquisa\" placeholder=\"Pesquisar...\" />\r\n            <InputGroupAddon addonType=\"append\">\r\n                <Button color=\"secondary\" onClick={() => this.getPesquisa()}>\r\n                    <FaSearch />\r\n                </Button>\r\n            </InputGroupAddon>\r\n        </InputGroup>\r\n    }\r\n}\r\n\r\nclass BarraInicial extends React.Component {\r\n    render() {\r\n        const { exec, message, colspan } = this.props\r\n        return exec ? (\r\n            <td colspan={colspan}>\r\n                {message}\r\n            </td>\r\n        ) : null\r\n    }\r\n}\r\n\r\nclass Navegacao extends React.Component {\r\n    cookieUrl = this.cookieUrl.bind(this)\r\n    async cookieUrl(url) {\r\n        await Cookies.set(\"ultimaPagina\", url)\r\n    }\r\n\r\n    render() {\r\n        const { backPaste } = this.props\r\n        return <div className=\"barraNav\">\r\n            <Nav vertical>\r\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                    <p className=\"subtituloMenu\">Cadastros</p>\r\n                </LinhaImaginaria>\r\n                <Link to={(backPaste ? backPaste : \"../\") + \"cadastro/professor\"} onClick={() => this.cookieUrl(\"../cadastro/professor\")}>Professor</Link>\r\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                    <Link to={(backPaste ? backPaste : \"../\") + \"cadastro/modalidade\"} onClick={() => this.cookieUrl(\"../cadastro/modalidade\")}>Modalidade</Link>\r\n                    <Link to={(backPaste ? backPaste : \"../\") + \"../cadastro/areaConhecimento\"} onClick={() => this.cookieUrl(\"../cadastro/areaConhecimento\")}>√Årea de conhecimento</Link>\r\n                    <Link to={(backPaste ? backPaste : \"../\") + \"../cadastro/unidadeCurricular\"} onClick={() => this.cookieUrl(\"../cadastro/unidadeCurricular\")}>Unidade curricular</Link>\r\n                </LinhaImaginaria>\r\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                    <p className=\"subtituloMenu\">Processos</p>\r\n                    <Link to={(backPaste ? backPaste : \"../\") + \"processo/gerenciaremailsprofessores\"} onClick={() => this.cookieUrl(\"../processo/gerenciaremailsprofessores\")}>E-mails</Link>\r\n                </LinhaImaginaria>\r\n                <Link to={(backPaste ? backPaste : \"../\") + \"processo/disponibilidade\"} onClick={() => this.cookieUrl(\"../processo/disponibilidade\")}>Disponibilidade</Link>\r\n                <Link to={(backPaste ? backPaste : \"../\") + \"processo/competencia\"} onClick={() => this.cookieUrl(\"../processo/competencia\")}>Compet√™ncia</Link>\r\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                    <p className=\"subtituloMenu\">Consultas</p>\r\n                    <Link to={(backPaste ? backPaste : \"../\") + \"consulta/consultadisponibilidade\"} onClick={() => this.cookieUrl(\"../consulta/consultadisponibilidade\")}>Disponibilidade</Link>\r\n                    <Link to={(backPaste ? backPaste : \"../\") + \"consulta/consultacompetencia\"} onClick={() => this.cookieUrl(\"../consulta/consultacompetencia\")}>Compet√™ncia</Link>\r\n                </LinhaImaginaria>\r\n                <hr />\r\n                <Link to={(backPaste ? backPaste : \"../\") + \"logout\"} onClick={() => this.cookieUrl(\"../logout\")}><span style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>Sair</span></Link>\r\n            </Nav>\r\n        </div>\r\n    };\r\n}\r\n\r\nclass Cabecalho extends React.Component {\r\n\r\n    render() {\r\n\r\n        return <header className=\"cabecalho\">\r\n            <Row>\r\n                <Col>\r\n                    <Row style={{ width: \"382px\" }}>\r\n                        <Col>\r\n                            <Link to=\"../home\">\r\n                                <img src={logoSESI} className=\"App-logo\" alt=\"logo\" />\r\n                            </Link>\r\n                        </Col>\r\n                        <Col>\r\n                            <Link to=\"../home\">\r\n                                <img src={logoSENAI} className=\"App-logo\" alt=\"logo\" />\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                    <Status />\r\n                </LinhaImaginaria>\r\n            </Row>\r\n        </header>\r\n\r\n    };\r\n}\r\nclass Status extends React.Component {\r\n    state = {\r\n        spin: true,\r\n        foo: true,\r\n        inicial: true,\r\n        pop: \"none\",\r\n        texto: \"\"\r\n    }\r\n    componentDidMount() {\r\n        this.verificaEmail()\r\n        this.timer = setInterval(\r\n            () => {\r\n                this.verificaEmail()\r\n            },\r\n            5000\r\n        );\r\n    }\r\n    verificaEmail() {\r\n        GET(\"gerenciarEmails/verificarEmails\", false)\r\n            .then(response => {\r\n                if (response === undefined) response = \"ERRO\"\r\n                this.TimerEmail(response)\r\n            })\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    verificaEstadoEmail = {\r\n        ANDAMENTO: () => {\r\n            this.setState({\r\n                spin: true,\r\n                foo: false,\r\n                texto: \"Em andamento.\"\r\n            })\r\n        },\r\n        ACABOU: () => {\r\n            this.setState({\r\n                spin: false,\r\n                foo: true,\r\n                texto: \"Sem atividade.\"\r\n            })\r\n        },\r\n        ERRO: () => {\r\n            this.setState({\r\n                spin: false,\r\n                foo: false,\r\n                texto: \"Problemas com a conex√£o, aguarde um momento.\"\r\n            })\r\n        }\r\n    }\r\n\r\n    TimerEmail = (f) => {\r\n        if (f !== undefined) this.setState({ inicial: false })\r\n        this.verificaEstadoEmail[f]()\r\n    }\r\n    render() {\r\n        const { foo, spin, inicial, texto } = this.state\r\n        const ic = spin ? <Spinner size=\"sm\" color=\"success\" /> : null\r\n        const f = foo ? \"statusGreen\" : \"statusOrange\"\r\n        const t = !foo && !spin ? \"statusRed\" : null\r\n        const color = \"status \" + (inicial ? \"statusGray\" : (t ? t : f))\r\n\r\n        return (\r\n            <ToastHeader id=\"PopoverLegacy\" icon={ic} >\r\n                <div className={color} /> E-mails\r\n                <UncontrolledPopover trigger=\"legacy\" placement=\"bottom\" target=\"PopoverLegacy\">\r\n                    <PopoverHeader>Situa√ß√£o</PopoverHeader>\r\n                    <PopoverBody>\r\n                        <ul style={{ padding: \"0\" }} >\r\n                            <li style={{ padding: \"0\", display: \"inline\", float: \"left\" }}>{color.includes(\"statusGray\") ? \"...\" : texto}</li>\r\n                        </ul>\r\n                    </PopoverBody>\r\n                </UncontrolledPopover>\r\n            </ToastHeader>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nclass LinhaImaginaria extends React.Component {\r\n    render() {\r\n        return this.props.permissao == this.props.linha ? (<>{this.props.children}</>) : null\r\n    }\r\n}\r\n\r\nclass ModalDetalhe extends React.Component {\r\n    state = {\r\n        modal: false,\r\n        modalTabela: false\r\n    }\r\n    toggleTabela = this.toggleTabela.bind(this)\r\n    toggle = this.toggle.bind(this)\r\n    redirect = (id) => {\r\n        this.props.redirect(id)\r\n        this.toggle(this.props.toggle)\r\n    }\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n    toggleTabela() {\r\n        this.setState(prevState => ({\r\n            modalTabela: !prevState.modalTabela\r\n        }));\r\n    }\r\n    render() {\r\n        const { professor, manha, tarde, noite, modalidade, areaConhecimento, unidadeCurricular, id, destaque } = this.props\r\n        return <>\r\n            <FaClipboard onClick={() => this.redirect(id)} />\r\n\r\n            <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                <ModalHeader toggle={this.toggle}>Detalhe</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"disponivelDescriptionBox\">\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"w-25\">\r\n                                Nome:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {professor.nome}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"w-25\">\r\n                                E-mail:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {professor.email}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"w-25\">\r\n                                Matr√≠cula:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {professor.matricula}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"w-25\">\r\n                                Tipo:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {professor.tipo}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"w-25\">\r\n                                Telefone:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {professor.telefone}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"disponivelBox\">\r\n                        <b>Dispon√≠vel</b>\r\n                        <div className=\"flexbox manha\">\r\n                            <div className=\"w-25 fontSmall \">\r\n                                Manha:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {manha}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox tarde\">\r\n                            <div className=\"w-25 fontSmall\">\r\n                                Tarde:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {tarde}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox noite\">\r\n                            <div className=\"w-25 fontSmall\">\r\n                                Noite:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {noite}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"disponivelBox\">\r\n                        <b>Compet√™ncias</b>\r\n                        <div className=\"flexbox competencia\">\r\n                            <div className=\"w-25 fontSmall \">\r\n                                Modalidade:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {modalidade.map((res, i) => {\r\n                                    if ((i + 1) == modalidade.length) {\r\n                                        return res\r\n                                    }\r\n                                    return res + \", \"\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox competencia\">\r\n                            <div className=\"w-25 fontSmall\">\r\n                                Area de conhecimento:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                {areaConhecimento.map((res, i) => {\r\n                                    if ((i + 1) == areaConhecimento.length) {\r\n                                        return res\r\n                                    }\r\n                                    return res + \", \"\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox competencia\">\r\n                            <div className=\"w-25 fontSmall\">\r\n                                Unidade curricular:\r\n                            </div>\r\n                            <div className=\"w-75\">\r\n                                <button className={\"btn_modal_unidadeCurricular\"} onClick={this.toggleTabela}>ver lista</button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button onClick={this.toggle}>Fechar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Modal style={{ width: \"100%\" }} isOpen={this.state.modalTabela} toggle={this.toggleTabela}>\r\n                <ModalHeader toggle={this.toggleTabela}>Unidade curricular do {professor.nome}</ModalHeader>\r\n                <ModalBody>\r\n                    <div style={{ marginTop: 0 }} className=\"div_tabela\">\r\n                        <Table >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Nome</th>\r\n                                    <th>Observa√ß√£o</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {unidadeCurricular.map(o => {\r\n                                    let focus = {}\r\n                                    if (destaque != undefined && destaque != null) {\r\n                                        for (let i in destaque) {\r\n                                            if (o.id === destaque[i].id) {\r\n                                                focus = { backgroundColor: '#009785', color: \"white\" }\r\n                                                break\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    return (\r\n                                        <tr style={focus} key={o.id}>\r\n                                            <td>{o.id}</td>\r\n                                            <td>{o.nome}</td>\r\n                                            <td>{o.descricao == \"\" ? \" - \" : o.descricao}</td>\r\n                                        </tr>\r\n                                    );\r\n                                })}\r\n                                {\r\n                                    unidadeCurricular.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button onClick={this.toggleTabela}>Fechar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </>\r\n    }\r\n}\r\n\r\nconst EmailDeConfirmacao = (props) => {\r\n    const { toggle, callback, email, reenviar } = props\r\n    return (<>\r\n        <div id=\"EmailDeConfirmacao\">\r\n            <Modal isOpen={toggle} toggle={() => callback(false, false)}>\r\n                <ModalHeader>Confirma√ß√£o de e-mail</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"caixa_alerta\" style={{ borderColor: \"#00dc00\" }}>\r\n                        <p className=\"p_alerta\">Enviamos um e-mail para este endere√ßo: {email}</p>\r\n                        <p className=\"p_alerta\">{props.children}</p>\r\n                    </div>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button onClick={() => reenviar(false, false)}>Reenviar e-mail</button>\r\n                    <button onClick={() => callback(false, false)}>Fechar</button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nclass CampoObrigat√≥rio extends React.Component {\r\n    render() {\r\n        return <>\r\n            <span style={{ color: \"red\" }}>*</span>\r\n        </>\r\n    }\r\n}\r\n\r\nexport { EmailDeConfirmacao, BarraInicial, ContainerFade, Navegacao, Cabecalho, LinhaImaginaria, BarraDePesquisa, ModalDetalhe, CampoObrigat√≥rio }\r\n","import React from \"react\";\r\nimport { Row, Col, Fade } from \"reactstrap\";\r\nimport { Navegacao, Cabecalho } from \"../componentes/corpo\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    Cookies.set(\"ultimaPagina\", \"/home\")\r\n  }\r\n  render() {\r\n    return <div>\r\n      <div>\r\n        <Cabecalho user={this.props.user} />\r\n      </div>\r\n      <div className=\"corpo\">\r\n        <Row>\r\n          <Navegacao user={this.props.user} />\r\n          <Fade>\r\n            <div className=\"containerCorpo\">\r\n              <Col>\r\n                <div className=\"titulo\">\r\n                  <h1>Bem vindo!</h1>\r\n                </div>\r\n              </Col>\r\n            </div>\r\n          </Fade>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  };\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React from \"react\"\r\nimport {\r\n    Input, Label, FormGroup\r\n} from \"reactstrap\";\r\nimport { CampoObrigat√≥rio } from \"../componentes/corpo\"\r\nexport default class InputDefault extends React.Component {\r\n    handleChange(e) {\r\n        if(this.props.size > 0 && this.props.size !== undefined && this.props.size !== null)\r\n            this.props.evento(e.target.value.toString().limitSize(this.props.size))\r\n        else\r\n            this.props.evento(e.target.value.toString())\r\n    }\r\n\r\n    render() {\r\n        const { nome, titulo, tipo, valor, descricao, obrigatorio, disabled } = this.props\r\n        return (\r\n            <FormGroup className=\"inputCheio\">\r\n                <Label for={nome}>{titulo} {obrigatorio ? <CampoObrigat√≥rio /> : \"\"}</Label>\r\n                <Input onChange={this.handleChange.bind(this)} type={tipo}\r\n                    value={valor} id={nome} disabled={disabled} name={nome} placeholder={descricao}>{this.props.children}</Input>\r\n            </FormGroup>\r\n        )\r\n    }\r\n}","\r\nexport function ObjIsEmpty(o) { return Object.keys(o).length === 0 }\r\nexport function ObjIsEquivalent(a, b) {\r\n    let aProps = Object.getOwnPropertyNames(a);\r\n    let bProps = Object.getOwnPropertyNames(b);\r\n    if (aProps.length != bProps.length) return false;\r\n\r\n    for (let i = 0; i < aProps.length; i++) {\r\n        if (a[aProps[i]] !== b[aProps[i]]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport const ArrayCompare = (lista1, lista2) => {\r\n    let teste = true;\r\n    if(!Array.isArray(lista1)) {\r\n        return null\r\n    }\r\n    if(!Array.isArray(lista2)){\r\n        return null\r\n    } \r\n    for (let i = 0; i < lista1.length; i++) {\r\n        if (lista1[i] != lista2[i]) {\r\n            teste = false\r\n            break\r\n        }\r\n    }\r\n    if (teste) {\r\n\r\n        for (let i = 0; i < lista2.length; i++) {\r\n            if (lista1[i] != lista2[i]) {\r\n                teste = false\r\n                break\r\n            }\r\n        }\r\n    }\r\n    return teste\r\n}","import React, { Component } from \"react\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1,pageLimit: this.pageLimit,totalRecords:this.pageLimit, pageLimit:this.totalRecords, totalPages:this.totalPages };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    const { totalRecords = null, pageLimit = 30 } = this.props;\r\n    \r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n    if(this.totalPages < this.state.currentPage){\r\n      this.setState({\r\n        currentPage: this.totalPages\r\n      })\r\n      this.gotoPage(this.state.currentPage)\r\n    }\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    const cal = (this.state.currentPage - this.pageNeighbours * 2 - 1)\r\n    this.gotoPage(cal == 0 ? 1 : cal);\r\n  };\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    const cal = (this.state.currentPage + this.pageNeighbours * 2 + 1)\r\n    this.gotoPage(cal > this.totalPages ? this.totalPages : cal);\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    if (this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination\">\r\n            {pages.map((page, index) => {\r\n              if (page === LEFT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Previous\"\r\n                      onClick={this.handleMoveLeft}\r\n                    >\r\n                      <span aria-hidden=\"true\">&laquo;</span>\r\n                      <span className=\"sr-only\">Previous</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              if (page === RIGHT_PAGE)\r\n                return (\r\n                  <li key={index} className=\"page-item\">\r\n                    <a\r\n                      className=\"page-link\"\r\n                      href=\"#\"\r\n                      aria-label=\"Next\"\r\n                      onClick={this.handleMoveRight}\r\n                    >\r\n                      <span aria-hidden=\"true\">&raquo;</span>\r\n                      <span className=\"sr-only\">Next</span>\r\n                    </a>\r\n                  </li>\r\n                );\r\n\r\n              return (\r\n                <li\r\n                  key={index}\r\n                  className={`page-item${\r\n                    currentPage === page ? \" active\" : \"\"\r\n                  }`}\r\n                >\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#\"\r\n                    onClick={e => this.handleClick(page, e)}\r\n                  >\r\n                    {page}\r\n                  </a>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport Pagination from \"./paginacao-plugin\";\r\nimport { ArrayCompare } from \"./utilidadePublica\";\r\n\r\nclass Paginacao extends React.Component {\r\n    state = {\r\n        lista: [],\r\n        listaCorrente: [],\r\n        currentPage: 1,\r\n        totalPages: null,\r\n        pageLimit: 10,\r\n        buttons: {\r\n            10: true,\r\n            25: false,\r\n            50: false,\r\n            100: false,\r\n        }\r\n    }\r\n    setPageLimit = (pageLimit) => {\r\n        this.setState({\r\n            pageLimit\r\n        })\r\n    }\r\n    onPageChanged = data => {\r\n        const { lista } = this.state;\r\n        const { currentPage, totalPages, pageLimit } = data;\r\n        if (lista.length > 0) {\r\n            const offset = (currentPage - 1) * pageLimit;\r\n            const listaCorrente = lista.slice(offset, offset + pageLimit);\r\n            this.setState({ listaCorrente });\r\n        }\r\n        this.setState({ currentPage, totalPages });\r\n    };\r\n    componentDidUpdate() {\r\n        if (!ArrayCompare(this.props.lista, this.state.lista)) {\r\n            this.setState({ lista: this.props.lista })\r\n        }\r\n        this.atualizaLista()\r\n        this.props.retornaLista(this.props.lista.length > 0 ? this.state.listaCorrente : [])\r\n    }\r\n\r\n    atualizaLista() {\r\n        const { lista } = this.state;\r\n        const { currentPage, pageLimit } = this.state;\r\n        const calculo = (currentPage - 1) * pageLimit\r\n        const offset = calculo <= 0 ? 0 : calculo\r\n        if (this.props.lista.length > 0) {\r\n            const listaCorrente = lista.slice(offset, offset + pageLimit);\r\n            if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n                this.setState({ listaCorrente });\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    async setBotoes(botao) {\r\n        await this.zerarBotoes()\r\n        let { buttons } = this.state\r\n        buttons[botao] = true\r\n        this.setState({ buttons })\r\n    }\r\n\r\n    zerarBotoes() {\r\n        this.setState({\r\n            buttons: {\r\n                10: false,\r\n                25: false,\r\n                50: false,\r\n                100: false,\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { buttons } = this.state\r\n\r\n        const b10 = buttons[10]\r\n        const b25 = buttons[25]\r\n        const b50 = buttons[50]\r\n        const b100 = buttons[100]\r\n\r\n        return <div className=\"paginacao\" id=\"paginacao\">\r\n            {\r\n                (this.props.total === 0) ? null :\r\n                    <Pagination\r\n                        totalRecords={this.props.total}\r\n                        pageLimit={this.state.pageLimit}\r\n                        pageNeighbours={4}\r\n                        onPageChanged={this.onPageChanged}\r\n                    />\r\n            }\r\n            <div className=\"limitePaginacao\" style={{ marginLeft: \"15px\" }}>\r\n                <span style={{ fontSize: \"11px\", color: \"rgba(0,0,0,.5)\" }}>N¬∫ Itens &nbsp;</span>\r\n                <ul className=\"pagination\">\r\n                    <li className={\"page-item \"+(b10 ? \"act\" : \"\")} onClick={() => this.setBotoes(10)}><a className=\"page-link\" onClick={() => this.setPageLimit(10)}>10</a></li>\r\n                    <li className={\"page-item \"+(b25 ? \"act\" : \"\")} onClick={() => this.setBotoes(25)}><a className=\"page-link\" onClick={() => this.setPageLimit(25)}>25</a></li>\r\n                    <li className={\"page-item \"+(b50 ? \"act\" : \"\")} onClick={() => this.setBotoes(50)}><a className=\"page-link\" onClick={() => this.setPageLimit(50)}>50</a></li>\r\n                    <li className={\"page-item \"+(b100 ? \"act\" : \"\")} onClick={() => this.setBotoes(100)}><a className=\"page-link\" onClick={() => this.setPageLimit(100)}>100</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\n\r\nexport default Paginacao","import React from \"react\"\r\nimport {\r\n    Button\r\n} from \"reactstrap\";\r\n\r\nclass BotaoEnviar extends React.Component {\r\n    handleClick(event) {\r\n        event.preventDefault()\r\n        this.props.enviar()\r\n    }\r\n    render() {\r\n        return (\r\n            <Button outline type=\"button\" onClick={this.handleClick.bind(this)} color=\"success\" size=\"sm\" className=\"Enviar\" >Enviar</Button>\r\n        )\r\n    }\r\n}\r\n\r\nclass BotaoResetar extends React.Component {\r\n    handleClick(event) {\r\n        event.preventDefault()\r\n        this.props.resetar()\r\n    }\r\n    render() {\r\n        return (\r\n            <Button outline type=\"reset\" onClick={this.handleClick.bind(this)} color=\"secondary\" size=\"sm\" className=\"Limpar\" >Limpar</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport { BotaoEnviar, BotaoResetar }","import React from \"react\";\r\nimport {\r\n  Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\r\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\r\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\r\n\r\nclass Modalidade extends React.Component {\r\n  state = {\r\n    id: \"\",\r\n    nome: \"\",\r\n    descricao: \"\",\r\n    id__: \"\",\r\n    nome__: \"\",\r\n    descricao__: \"\",\r\n    loading: false,\r\n    modal: false,\r\n    inicial: true,\r\n    form: \"none\",\r\n    listaCorrente: [],\r\n    listaCache: [],\r\n    lista: [],\r\n    barraPesquisa: \"\"\r\n  }\r\n  token = this.props.user.token\r\n  toggle = this.toggle.bind(this);\r\n\r\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n  //fields inserir\r\n  preencheNome(nome) { this.setState({ nome }) }\r\n  preencheDescricao(descricao) { this.setState({ descricao }) }\r\n  limparFormlulario() {\r\n    this.setState({\r\n      nome: \"\",\r\n      descricao: \"\"\r\n    })\r\n  }\r\n  //fields alterar\r\n  preencheId__(id__) { this.setState({ id__ }) }\r\n  preencheNome__(nome__) { this.setState({ nome__ }) }\r\n  preencheDescricao__(descricao__) { this.setState({ descricao__ }) }\r\n  limparFormlulario__() {\r\n    this.setState({\r\n      nome__: \"\",\r\n      descricao__: \"\"\r\n    })\r\n  }\r\n\r\n  componentDidMount() { this.buscar(); }\r\n  // inserir\r\n  inserir = async o => {\r\n    this.setState({ loading: true })\r\n    await POST(\"modalidade/inserir/\" + this.token, o)\r\n    this.buscar();\r\n  }\r\n  enviaFormulario(event) {\r\n    if (this.state.nome.isEmpty()) {\r\n      alert(\"Insira o nome para enviar\")\r\n      return\r\n    }\r\n    let o = {};\r\n    o.descricao = this.state.descricao;\r\n    o.nome = this.state.nome;\r\n    this.inserir(o);\r\n  }\r\n  // atualizar\r\n  buscar = () => {\r\n    // segundo atualiza <----------------------------\r\n    GET(\"modalidade/listar/\" + this.token)\r\n      .then(response => {\r\n        if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n        this.setState({\r\n          lista: response,\r\n          listaCache: response,\r\n          inicial: false\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          lista: [],\r\n          listaCache: [],\r\n          inicial: true\r\n        })\r\n      }).finally(() => {\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n  // remover\r\n  removerLinha = async (id) => {\r\n    this.setState({ loading: true })\r\n    await DELETE(\"modalidade/remover/\" + id + \"/\" + this.token)\r\n    this.buscar();\r\n  }\r\n  //alterarF\r\n  enviaFormulario__(event) {\r\n    if (this.state.nome__.isEmpty()) {\r\n      alert(\"Insira o nome para enviar\")\r\n      return;\r\n    }\r\n    let o = {};\r\n    o.descricao = this.state.descricao__;\r\n    o.nome = this.state.nome__;\r\n    o.id = this.state.id__;\r\n    this.alterar(o);\r\n  }\r\n  alterar = async o => {\r\n    this.setState({ loading: true })\r\n    await PUT(\"modalidade/alterar/\" + this.token, o)\r\n    this.setState({ modal: false })\r\n    this.buscar();\r\n  }\r\n  buscarPorId = async (id) => {\r\n    this.limparFormlulario__();\r\n    // segundo atualiza <----------------------------\r\n    this.setState({ loading: true })\r\n    let response = await GET(\"modalidade/buscar/\" + id + \"/\" + this.token)\r\n    this.preencheId__(response.id)\r\n    this.preencheNome__(response.nome)\r\n    this.preencheDescricao__(response.descricao)\r\n    this.setState({\r\n      modal: true\r\n    })\r\n    this.setState({ loading: false })\r\n  }\r\n  //modal\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n  toggleForm() {\r\n    if (this.state.form === \"none\") {\r\n      this.setState(prevState => ({\r\n        form: \"block\"\r\n      }));\r\n    }\r\n    if (this.state.form === \"block\") {\r\n      this.setState(prevState => ({\r\n        form: \"none\"\r\n      }));\r\n    }\r\n  }\r\n\r\n  async getRetornaListaCorrente(listaCorrente) {\r\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n      await this.setState({ listaCorrente });\r\n    }\r\n\r\n  }\r\n\r\n  async barraPesquisa(listaFiltrada) {\r\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n      await this.setState({\r\n        lista: listaFiltrada\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading, inicial, nome__, descricao__, nome, descricao } = this.state\r\n\r\n    return <div>\r\n      <Loading loading={loading} message='Carregando ...' />\r\n      <div>\r\n        <Cabecalho user={this.props.user} />\r\n      </div>\r\n      <div className=\"corpo\">\r\n        <Row>\r\n          <Navegacao user={this.props.user} />\r\n          <ContainerFade>\r\n            <Row>\r\n              <div className=\"titulo\">\r\n                <h1>Modalidade</h1>\r\n              </div>\r\n            </Row>\r\n            <div className=\"cadastro\">\r\n              <Container>\r\n                <Button outline onClick={this.toggleForm.bind(this)}>Formul√°rio</Button>\r\n                <Col style={{ display: this.state.form }}>\r\n                  <form>\r\n                    <Row>\r\n                      <Col xs={{ size: 6, offset: 3 }}>\r\n                        <Col>\r\n                          <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"255\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputDefault evento={this.preencheDescricao.bind(this)} valor={descricao} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observa√ß√£o\" descricao=\"Descreva...\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <div className=\"botao\" align=\"right\">\r\n                            <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\r\n                            <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                          </div>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                </Col>\r\n              </Container>\r\n            </div>\r\n            <div className=\"div_tabela\">\r\n              <div className=\"barra_menu\">\r\n                <div className=\"w-50\">\r\n                  <BarraDePesquisa\r\n                    funcPesquisa={this.barraPesquisa.bind(this)}\r\n                    pesquisa={this.state.barraPesquisa}\r\n                    attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                    indicador=\"nome\"\r\n                    lista={this.state.listaCache} />\r\n                </div>\r\n                <div className=\"w-50\">\r\n\r\n                  <Paginacao\r\n                    lista={this.state.lista}\r\n                    total={this.state.lista.length}\r\n                    retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Nome</th>\r\n                    <th>Observa√ß√£o</th>\r\n                    <th className=\"acao\" colspan='2' width=\"5%\">A√ß√£o</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.listaCorrente.map(o => {\r\n                    return (\r\n                      <tr key={o.id}>\r\n                        <td>{o.id}</td>\r\n                        <td>{o.nome}</td>\r\n                        <td>{o.descricao.isEmpty() ? \" - \" : o.descricao}</td>\r\n                        <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\r\n                        <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja remover esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Deletar</Button></td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {\r\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                  }\r\n                </tbody>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                  <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\r\n                  <form>\r\n                    <ModalBody>\r\n                      <Row>\r\n                        <Col>\r\n                          <Col>\r\n                            <InputDefault obrigatorio evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"descricao\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputDefault evento={this.preencheDescricao__.bind(this)} valor={descricao__} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observa√ß√£o\" descricao=\"Descreva...\" />\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\r\n                      <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\r\n                    </ModalFooter>\r\n                  </form>\r\n                </Modal>\r\n              </Table>\r\n            </div>\r\n          </ContainerFade>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  };\r\n}\r\n\r\nexport default Modalidade\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\r\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\r\nimport { EmailDeConfirmacao, BarraInicial, ContainerFade, Navegacao, Cabecalho, LinhaImaginaria, BarraDePesquisa } from \"../componentes/corpo\"\r\n\r\nclass Professor extends React.Component {\r\n  state = {\r\n    nome: \"\",\r\n    email: \"\",\r\n    telefone: \"\",\r\n    permissao: \"\",\r\n    senha: \"\",\r\n    confirmar: \"\",\r\n    matricula: \"\",\r\n    tipo: \"\",\r\n\r\n    id__: \"\",\r\n    nome__: \"\",\r\n    email__: \"\",\r\n    telefone__: \"\",\r\n    permissao__: \"\",\r\n    senha__: \"\",\r\n    confirmar__: \"\",\r\n    matricula__: \"\",\r\n    tipo__: \"\",\r\n\r\n    loading: false,\r\n    modal: false,\r\n    inicial: true,\r\n    form: \"none\",\r\n    mudaSenha: \"none\",\r\n\r\n    lista: [],\r\n    listaCorrente: [],\r\n    listaCache: [],\r\n    barraPesquisa: \"\",\r\n    inativos: \"ATIVO\",\r\n    toggleModalConfirmacao: false,\r\n    tokenCadastroCache: \"\"\r\n  }\r\n  token = this.props.user.token\r\n  toggle = this.toggle.bind(this)\r\n\r\n\r\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n  //fields inserir\r\n  preencheNome(nome) { this.setState({ nome }) }\r\n  preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\r\n  preencheTelefone(telefone) { this.setState({ telefone: telefone.maskTelefone() }) }\r\n  preenchePermissao(permissao) { this.setState({ permissao }) }\r\n  preencheSenha(senha) { this.setState({ senha }) }\r\n  preencheConfirmar(confirmar) { this.setState({ confirmar }) }\r\n  preencheMatricula(matricula) { this.setState({ matricula }) }\r\n  preencheTipo(tipo) { this.setState({ tipo }) }\r\n  limparFormlulario() {\r\n    this.setState({\r\n      nome: \"\",\r\n      email: \"\",\r\n      telefone: \"\",\r\n      permissao: \"\",\r\n      senha: \"\",\r\n      confirmar: \"\",\r\n      matricula: \"\",\r\n      tipo: \"\"\r\n    })\r\n  }\r\n  //fields alterar\r\n  preencheId__(id__) { this.setState({ id__: id__.toString() }) }\r\n  preencheNome__(nome__) { this.setState({ nome__ }) }\r\n  preencheEmail__(email__) { this.setState({ email__: email__.toLowerCase().replaceAll(\" \", \"\") }) }\r\n  preencheTelefone__(telefone__) { this.setState({ telefone__: telefone__.maskTelefone() }) }\r\n  preenchePermissao__(permissao__) { this.setState({ permissao__ }) }\r\n  preencheSenha__(senha__) { this.setState({ senha__ }) }\r\n  preencheConfirmar__(confirmar__) { this.setState({ confirmar__ }) }\r\n  preencheMatricula__(matricula__) { this.setState({ matricula__ }) }\r\n  preencheTipo__(tipo__) { this.setState({ tipo__ }) }\r\n  limparFormlulario__() {\r\n    this.setState({\r\n      nome__: \"\",\r\n      email__: \"\",\r\n      telefone__: \"\",\r\n      permissao__: \"\",\r\n      senha__: \"\",\r\n      confirmar__: \"\",\r\n      matricula__: \"\",\r\n      tipo__: \"\"\r\n    })\r\n  }\r\n\r\n  componentDidMount() { this.buscar() }\r\n  // inserir\r\n  inserir = async o => {\r\n    this.setState({ loading: true });\r\n    await POST(\"professor/inserirProfessor/\" + this.token + \"/\" + this.props.user.id, o, undefined, (ok) => {\r\n      this.toggleModalConfirmacaoFunc(true)\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          tokenCadastroCache: response\r\n        })\r\n      })\r\n      .finally(() => {\r\n        this.buscar();\r\n      })\r\n  }\r\n\r\n  async reenviarEmail() {\r\n    await GET(\"professor/enviarEmailCadastro/\" + this.state.tokenCadastroCache).then(() => {\r\n      alert(\"Verifique sua caixa de entrada e pasta de span, isso pode levar alguns minutos.\")\r\n    })\r\n  }\r\n\r\n  enviaFormulario(event) {\r\n    let st = this.state\r\n    if (\r\n      !st.nome.isEmpty() &&\r\n      !st.email.isEmpty() &&\r\n      (\r\n        (!st.telefone.isEmpty() && st.telefone.length >= 14 && st.telefone.length <= 15) ||\r\n        st.telefone.isEmpty()\r\n      ) &&\r\n      (!st.permissao.isEmpty() && !st.permissao.equals(\"SELECIONE\")) &&\r\n      (!st.tipo.isEmpty() && !st.tipo.equals(\"SELECIONE\")) &&\r\n      !st.senha.isEmpty() &&\r\n      !st.confirmar.isEmpty()\r\n    ) {\r\n      if (st.email.isEmail()) {\r\n        if (st.senha.length > 4) {\r\n          if (st.senha.equals(st.confirmar)) {\r\n            let o = {};\r\n            o.nome = st.nome;\r\n            o.email = st.email;\r\n            o.tipo = st.tipo;\r\n            o.matricula = st.matricula;\r\n            o.telefone = st.telefone;\r\n            o.permissao = st.permissao;\r\n            o.senha = st.senha;\r\n            this.inserir(o);\r\n          } else alert(\"\\\"Confirmar\\\" precisa ser exatamente igual a senha.\")\r\n        } else alert(\"A senha precisa ter pelo menos 5 letras, e no m√°ximo 10 letras.\")\r\n      } else alert(\"Digite um e-mail v√°lido.\")\r\n    } else alert(\"Insira os dados para enviar\")\r\n\r\n  }\r\n  // atualizar\r\n\r\n  tipoLista = {\r\n    PROFESSOR: () => {\r\n      GET(\"professor/buscar/\" + this.props.user.id + \"/\" + this.token)\r\n        .then(response => {\r\n          let o = {}\r\n          let novaLista = []\r\n          o.id = response.id\r\n          o.nome = response.nome\r\n          o.email = response.email\r\n          o.telefone = response.telefone\r\n          o.permissao = response.permissao\r\n\r\n          novaLista.push(o)\r\n          this.setState({\r\n            lista: novaLista,\r\n            listaCache: novaLista,\r\n            listaCorrente: novaLista,\r\n            inicial: false\r\n          })\r\n        }).catch(err => {\r\n          console.log(err)\r\n          this.setState({\r\n            lista: [],\r\n            listaCache: [],\r\n            listaCorrente: [],\r\n            inicial: true\r\n          })\r\n        }).finally(() => {\r\n          this.setState({ loading: false })\r\n        })\r\n    },\r\n    ADMINISTRADOR: () => {\r\n      GET(\"professor/listar/\" + this.state.inativos + \"/\" + this.token)\r\n        .then(response => {\r\n          if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n          this.setState({\r\n            lista: response,\r\n            listaCache: response,\r\n            inicial: false\r\n          })\r\n        }).catch(err => {\r\n          console.log(err)\r\n          this.setState({\r\n            lista: [],\r\n            listaCache: [],\r\n            inicial: true\r\n          })\r\n        }).finally(() => {\r\n          this.setState({ loading: false })\r\n        })\r\n    }\r\n  }\r\n\r\n  buscar = () => {\r\n    // segundo atualiza <----------------------------\r\n    this.tipoLista[this.props.user.permissao]()\r\n  }\r\n  // remover\r\n  removerLinha = async (id) => {\r\n    this.setState({ loading: true });\r\n    await DELETE(\"professor/remover/\" + id + \"/\" + this.token)\r\n      .finally(response => {\r\n        this.buscar();\r\n      })\r\n  }\r\n  //alterar\r\n\r\n  enviaFormulario__(event) {\r\n    let st = this.state\r\n    if (\r\n      !st.nome__.isEmpty() &&\r\n      !st.email__.isEmpty() &&\r\n      (\r\n        (!st.telefone.isEmpty() && st.telefone.length >= 14 && st.telefone.length <= 15) ||\r\n        st.telefone.isEmpty()\r\n      ) &&\r\n      (!st.tipo__.isEmpty() && !st.tipo__.equals(\"SELECIONE\")) &&\r\n      (!st.permissao__.isEmpty() && !st.permissao__.equals(\"SELECIONE\"))\r\n    ) {\r\n      if (st.email__.isEmail()) {\r\n        let f = true;\r\n        let o = {};\r\n        o.id = st.id__;\r\n        o.nome = st.nome__;\r\n        o.email = st.email__;\r\n        o.tipo = st.tipo__;\r\n        o.matricula = st.matricula__;\r\n        o.telefone = st.telefone__;\r\n        o.permissao = st.permissao__;\r\n        if (st.mudaSenha != \"none\") {\r\n          if (!st.senha__.isEmpty()) {\r\n            if (st.senha__.length > 4) {\r\n              if (st.senha__.equals(st.confirmar__)) {\r\n                o.senha = st.senha__;\r\n              } else { f = false; alert(\"\\\"Confirmar\\\" precisa ser exatamente igual a senha.\") }\r\n            } else { f = false; alert(\"A senha precisa ter pelo menos 5 letras, e no m√°ximo 10 letras.\") }\r\n          } else o.senha = \"\"\r\n        } else o.senha = \"\"\r\n        if (f) this.alterar(o);\r\n      } else alert(\"Digite um e-mail v√°lido.\")\r\n    } else alert(\"Insira os dados para enviar\")\r\n  }\r\n\r\n  async reativarProfessor(id) {\r\n    this.setState({ loading: true });\r\n    await GET(\"professor/reativarProfessor/\" + id + \"/\" + this.token + \"/\" + this.props.user.id)\r\n      .finally(() => {\r\n        this.buscar();\r\n      })\r\n  }\r\n\r\n  alterar = async o => {\r\n    this.setState({ loading: true });\r\n    await PUT(\"professor/alterarProfessor/\" + this.token + \"/\" + this.props.user.id, o)\r\n      .finally(() => {\r\n        this.setState({ modal: false })\r\n        this.buscar();\r\n      })\r\n  }\r\n  buscarPorId = async (id) => {\r\n    // segundo atualiza <----------------------------\r\n    this.limparFormlulario__();\r\n    this.setState({ loading: true })\r\n    await GET(\"professor/buscar/\" + id + \"/\" + this.token)\r\n      .then(response => {\r\n\r\n        this.preencheId__(response.id)\r\n        this.preencheNome__(response.nome)\r\n        this.preencheEmail__(response.email)\r\n        this.preencheTelefone__(response.telefone)\r\n        this.preenchePermissao__(response.permissao)\r\n        this.preencheTipo__(response.tipo)\r\n        this.preencheMatricula__(response.matricula)\r\n\r\n        this.setState({\r\n          modal: true\r\n        })\r\n      }).finally(() => {\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n  //modal\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n  toggleForm() {\r\n    if (this.state.form === \"none\") {\r\n      this.setState(() => ({\r\n        form: \"block\"\r\n      }));\r\n    } else if (this.state.form === \"block\") {\r\n      this.setState(() => ({\r\n        form: \"none\"\r\n      }));\r\n    }\r\n  }\r\n  async toggleInativos() {\r\n    if (this.state.inativos === \"ATIVO\") {\r\n      await this.setState(() => ({\r\n        inativos: \"INATIVO\"\r\n      }));\r\n    } else if (this.state.inativos === \"INATIVO\") {\r\n      await this.setState(() => ({\r\n        inativos: \"ATIVO\"\r\n      }));\r\n    }\r\n    this.buscar()\r\n  }\r\n  toggleMudaSenha() {\r\n    if (this.state.mudaSenha === \"none\") {\r\n      this.setState(() => ({\r\n        mudaSenha: \"flex\"\r\n      }));\r\n    } else if (this.state.mudaSenha === \"flex\") {\r\n      this.setState(() => ({\r\n        mudaSenha: \"none\"\r\n      }));\r\n    }\r\n  }\r\n\r\n  getRetornaListaCorrente(listaCorrente) {\r\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n      this.setState({ listaCorrente });\r\n    }\r\n  }\r\n\r\n  async barraPesquisa(listaFiltrada) {\r\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n      await this.setState({\r\n        lista: listaFiltrada\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleModalConfirmacaoFunc(callback) {\r\n    if (callback != undefined)\r\n      this.setState({\r\n        toggleModalConfirmacao: callback,\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { loading, nome, email, telefone, permissao, senha, confirmar, matricula, tipo, toggleModalConfirmacao,\r\n      nome__, email__, telefone__, permissao__, senha__, confirmar__, matricula__, tipo__, inativos } = this.state;\r\n\r\n    return <div>\r\n      <Loading loading={loading} message='Carregando ...' />\r\n      <div>\r\n        <Cabecalho user={this.props.user} />\r\n      </div>\r\n      <div className=\"corpo\">\r\n        <Row>\r\n          <Navegacao user={this.props.user} />\r\n          <ContainerFade>\r\n            <Row>\r\n              <div className=\"titulo\">\r\n                <h1>Professor</h1>\r\n              </div>\r\n            </Row>\r\n            <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n              <div className=\"cadastro\">\r\n                <Container>\r\n                  <Button outline onClick={this.toggleForm.bind(this)}>Formul√°rio</Button>\r\n                  <Col style={{ display: this.state.form }}>\r\n                    <form>\r\n                      <Row>\r\n                        <Col xs={{ size: 8, offset: 2 }}>\r\n                          <Col>\r\n                            <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"70\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                          </Col>\r\n                          <Row>\r\n                            <Col md={{ size: 6 }}>\r\n                              <InputDefault obrigatorio evento={this.preencheMatricula.bind(this)} valor={matricula} size=\"10\" tipo=\"text\" nome=\"matricula\" titulo=\"Matr√≠cula\" descricao=\"Digite a sua matr√≠cula\" />\r\n                            </Col>\r\n                            <Col md={{ size: 6 }}>\r\n                              <InputDefault obrigatorio evento={this.preencheTipo.bind(this)} valor={tipo} tipo=\"select\" name=\"tipo\" titulo=\"Modalidade\">\r\n                                <option value=\"SELECIONE\">Selecione...</option>\r\n                                <option>HORISTA</option>\r\n                                <option>MENSALISTA</option>\r\n                              </InputDefault>\r\n                            </Col>\r\n                          </Row>\r\n                          <Col>\r\n                            <InputDefault obrigatorio evento={this.preencheEmail.bind(this)} valor={email} size=\"255\" tipo=\"text\" nome=\"email\" titulo=\"Email\" descricao=\"Digite um email\" />\r\n                          </Col>\r\n                          <Row>\r\n                            <Col md={{ size: 6 }}>\r\n                              <InputDefault obrigatorio evento={this.preenchePermissao.bind(this)} valor={permissao} tipo=\"select\" name=\"permissao\" titulo=\"Permissao\">\r\n                                <option value=\"SELECIONE\">Selecione...</option>\r\n                                <option>ADMINISTRADOR</option>\r\n                                <option>PROFESSOR</option>\r\n                              </InputDefault>\r\n                            </Col>\r\n                            <Col md={{ size: 6 }}>\r\n                              <InputDefault evento={this.preencheTelefone.bind(this)} valor={telefone} tipo=\"text\" nome=\"telefone\" titulo=\"Telefone\" descricao=\"Digite um telefone\" />\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col md={{ size: 6 }}>\r\n                              <InputDefault obrigatorio evento={this.preencheSenha.bind(this)} size=\"10\" valor={senha} tipo=\"password\" nome=\"senha\" titulo=\"Senha\" descricao=\"Digite uma senha\" />\r\n                            </Col>\r\n                            <Col md={{ size: 6 }}>\r\n                              <InputDefault obrigatorio evento={this.preencheConfirmar.bind(this)} size=\"10\" valor={confirmar} tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme a senha\" />\r\n                            </Col>\r\n                          </Row>\r\n                          <Col>\r\n                            <div className=\"botao\" align=\"right\">\r\n                              <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\r\n                              <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                            </div>\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    </form>\r\n                  </Col>\r\n                </Container>\r\n              </div>\r\n            </LinhaImaginaria>\r\n            <div className=\"div_tabela\">\r\n              <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                <div className=\"barra_inatividade\">\r\n                  <Button outline onClick={this.toggleInativos.bind(this)}>{inativos === \"ATIVO\" ? \"Ativos\" : \"Inativos\"}</Button>\r\n                </div>\r\n                <div className=\"barra_menu\">\r\n                  <div className=\"w-50\">\r\n                    <BarraDePesquisa\r\n                      funcPesquisa={this.barraPesquisa.bind(this)}\r\n                      pesquisa={this.state.barraPesquisa}\r\n                      attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                      indicador=\"nome\"\r\n                      lista={this.state.listaCache} />\r\n                  </div>\r\n                  <div className=\"w-50\">\r\n                    <Paginacao\r\n                      lista={this.state.lista}\r\n                      total={this.state.lista.length}\r\n                      retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </LinhaImaginaria>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Matr√≠cula</th>\r\n                    <th>Nome</th>\r\n                    <th>Tipo</th>\r\n                    <th>Email</th>\r\n                    <th>Telefone</th>\r\n                    <th>Permissao</th>\r\n                    <th className=\"acao\" colspan='2' width=\"5%\">A√ß√£o</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.listaCorrente.map(o => {\r\n                    return (\r\n                      <tr key={o.id}>\r\n                        <td>{o.id}</td>\r\n                        <td>{o.matricula}</td>\r\n                        <td>{o.nome}</td>\r\n                        <td>{o.tipo}</td>\r\n                        <td>{o.email}</td>\r\n                        <td>{o.telefone}</td>\r\n                        <td>{o.permissao}</td>\r\n                        {inativos === \"ATIVO\" ?\r\n                          (<>\r\n                            <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\r\n                            <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                              <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja inativar esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Inativar</Button></td>\r\n                            </LinhaImaginaria>\r\n                          </>) :\r\n                          (<>\r\n                            <td className=\"acao\" ><Button onClick={() => this.reativarProfessor(o.id)}>Reativar</Button></td>\r\n                          </>)\r\n                        }\r\n\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {\r\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                  }\r\n                </tbody>\r\n                <Loading loading={loading} message='Carregando ...' />\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                  <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\r\n                  <form>\r\n                    <ModalBody>\r\n                      <form>\r\n                        <Row>\r\n                          <Col xs={{ size: 12 }}>\r\n                            <Col>\r\n                              <InputDefault obrigatorio evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                            </Col>\r\n                            <Row>\r\n                              <Col md={{ size: 6 }}>\r\n                                <InputDefault obrigatorio evento={this.preencheMatricula__.bind(this)} valor={matricula__} size=\"255\" tipo=\"text\" nome=\"matricula\" titulo=\"Matr√≠cula\" descricao=\"Digite a sua matr√≠cula\" />\r\n                              </Col>\r\n                              <Col md={{ size: 6 }}>\r\n                                <InputDefault obrigatorio evento={this.preencheTipo__.bind(this)} valor={tipo__} tipo=\"select\" name=\"tipo\" titulo=\"Modalidade\">\r\n                                  <option value=\"SELECIONE\">Selecione...</option>\r\n                                  <option>HORISTA</option>\r\n                                  <option>MENSALISTA</option>\r\n                                </InputDefault>\r\n                              </Col>\r\n                            </Row>\r\n                            <Col>\r\n                              <InputDefault disabled obrigatorio evento={this.preencheEmail__.bind(this)} valor={email__} size=\"255\" tipo=\"text\" nome=\"email\" titulo=\"Email\" descricao=\"Digite um email\" />\r\n                            </Col>\r\n                            <Row>\r\n                              <Col md={{ size: 6 }}>\r\n                                <InputDefault obrigatorio evento={this.preenchePermissao__.bind(this)} valor={permissao__} tipo=\"select\" name=\"permissao\" titulo=\"Permissao\">\r\n                                  <option value=\"SELECIONE\">Selecione...</option>\r\n                                  <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                                    <option>ADMINISTRADOR</option>\r\n                                  </LinhaImaginaria>\r\n                                  <option>PROFESSOR</option>\r\n                                </InputDefault>\r\n                              </Col>\r\n                              <Col md={{ size: 6 }}>\r\n                                <InputDefault obrigatorio evento={this.preencheTelefone__.bind(this)} valor={telefone__} tipo=\"text\" nome=\"telefone\" titulo=\"Telefone\" descricao=\"Digite um telefone\" />\r\n                              </Col>\r\n                            </Row>\r\n                            <Col>\r\n                              <Button outline onClick={this.toggleMudaSenha.bind(this)}>Mudar senha</Button>\r\n                            </Col>\r\n                            <div><br /></div>\r\n                            <Row style={{ display: this.state.mudaSenha }}>\r\n                              <Col md={{ size: 6 }}>\r\n                                <InputDefault obrigatorio evento={this.preencheSenha__.bind(this)} valor={senha__} size=\"10\" tipo=\"password\" nome=\"senha\" titulo=\"Senha\" descricao=\"Digite uma senha\" />\r\n                              </Col>\r\n                              <Col md={{ size: 6 }}>\r\n                                <InputDefault obrigatorio evento={this.preencheConfirmar__.bind(this)} valor={confirmar__} size=\"10\" tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme a senha\" />\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\r\n                      <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\r\n                    </ModalFooter>\r\n                  </form>\r\n                </Modal>\r\n              </Table>\r\n            </div>\r\n          </ContainerFade>\r\n        </Row>\r\n      </div>\r\n      <EmailDeConfirmacao toggle={toggleModalConfirmacao} callback={this.toggleModalConfirmacaoFunc.bind(this)} email={email} reenviar={this.reenviarEmail.bind(this)}>\r\n        √â necess√°rio a confirma√ß√£o de e-mail para prosseguir!\r\n      </EmailDeConfirmacao>\r\n    </div>\r\n  };\r\n}\r\n\r\nexport default Professor\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\r\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\r\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\r\nimport {\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nclass AreaConhecimento extends React.Component {\r\n  state = {\r\n    id: \"\",\r\n    descricao: \"\",\r\n    nome: \"\",\r\n    id__: \"\",\r\n    descricao__: \"\",\r\n    nome__: \"\",\r\n    loading: false,\r\n    modal: false,\r\n    inicial: true,\r\n    form: \"none\",\r\n    listaCache: [],\r\n    lista: [],\r\n    listaCorrente: [],\r\n    barraPesquisa: \"\"\r\n  }\r\n  token = this.props.user.token\r\n  toggle = this.toggle.bind(this)\r\n\r\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n  //fields inserir\r\n  preencheNome(nome) { this.setState({ nome }) }\r\n  preencheDescricao(descricao) { this.setState({ descricao }) }\r\n  limparFormlulario() {\r\n    this.setState({\r\n      nome: \"\",\r\n      descricao: \"\"\r\n    })\r\n  }\r\n  //fields alterar\r\n  preencheId__(id__) { this.setState({ id__ }) }\r\n  preencheNome__(nome__) { this.setState({ nome__ }) }\r\n  preencheDescricao__(descricao__) { this.setState({ descricao__ }) }\r\n  limparFormlulario__() {\r\n    this.setState({\r\n      nome__: \"\",\r\n      descricao__: \"\"\r\n    })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.buscar();\r\n  }\r\n  // inserir\r\n  inserir = async o => {\r\n    this.setState({ loading: true });\r\n    await POST(\"areaConhecimento/inserir/\" + this.token, o)\r\n    this.buscar();\r\n  }\r\n  enviaFormulario(event) {\r\n    if (this.state.nome.isEmpty()) {\r\n      alert(\"Insira o nome para enviar\")\r\n      return\r\n    }\r\n    let o = {};\r\n    o.descricao = this.state.descricao\r\n    o.nome = this.state.nome\r\n    this.inserir(o);\r\n  }\r\n  // atualizar\r\n  buscar = async () => {\r\n    // segundo atualiza <----------------------------\r\n    await GET(\"areaConhecimento/listar/\" + this.token)\r\n      .then(response => {\r\n        if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n        this.setState({\r\n          lista: response,\r\n          listaCache: response,\r\n          inicial: false,\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          lista: [],\r\n          listaCache: [],\r\n          inicial: true,\r\n        })\r\n      }).finally(() => {\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n\r\n  }\r\n  // remover\r\n  removerLinha = async (id) => {\r\n    this.setState({ loading: true });\r\n    await DELETE(\"areaConhecimento/remover/\" + id + \"/\" + this.token)\r\n    this.buscar();\r\n  }\r\n  //alterar\r\n  enviaFormulario__(event) {\r\n    if (this.state.nome__.isEmpty()) {\r\n      alert(\"Insira o nome para enviar\")\r\n      return\r\n    }\r\n    let o = {};\r\n    o.descricao = this.state.descricao__;\r\n    o.nome = this.state.nome__;\r\n    o.id = this.state.id__;\r\n    this.alterar(o);\r\n  }\r\n  alterar = async o => {\r\n    this.setState({ loading: true });\r\n    await PUT(\"areaConhecimento/alterar/\" + this.token, o)\r\n    this.setState({ modal: false })\r\n    this.buscar();\r\n  }\r\n  buscarPorId = async (id) => {\r\n    this.limparFormlulario__();\r\n    // segundo atualiza <----------------------------\r\n    this.setState({ loading: true })\r\n    let response = await GET(\"areaConhecimento/buscar/\" + id + \"/\" + this.token)\r\n    this.preencheId__(response.id)\r\n    this.preencheNome__(response.nome)\r\n    this.preencheDescricao__(response.descricao)\r\n    this.setState({\r\n      modal: true\r\n    })\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  relacionar(id) {\r\n    this.props.history.push(\"/relacionamentoUnidadeCurricular/\" + id + \"/\" + this.token);\r\n  }\r\n  //modal\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n  toggleForm() {\r\n    if (this.state.form === \"none\") {\r\n      this.setState(() => ({\r\n        form: \"block\"\r\n      }));\r\n    }\r\n    if (this.state.form === \"block\") {\r\n      this.setState(() => ({\r\n        form: \"none\"\r\n      }));\r\n    }\r\n  }\r\n\r\n  getRetornaListaCorrente(listaCorrente) {\r\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n      this.setState({ listaCorrente });\r\n    }\r\n  }\r\n\r\n  async barraPesquisa(listaFiltrada) {\r\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n      await this.setState({\r\n        lista: listaFiltrada\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { loading, inicial, nome__, descricao__, nome, descricao } = this.state\r\n\r\n    return <div>\r\n      <Loading loading={loading} message='Carregando ...' />\r\n      <div>\r\n        <Cabecalho user={this.props.user} />\r\n      </div>\r\n      <div className=\"corpo\">\r\n        <Row>\r\n          <Navegacao user={this.props.user} />\r\n          <ContainerFade>\r\n            <Row>\r\n              <div className=\"titulo\">\r\n                <h1>√Årea de conhecimento</h1>\r\n              </div>\r\n            </Row>\r\n            <div className=\"cadastro\">\r\n              <Container>\r\n                <Button outline onClick={this.toggleForm.bind(this)}>Formul√°rio</Button>\r\n                <Col style={{ display: this.state.form }}>\r\n                  <form>\r\n                    <Row>\r\n                      <Col xs={{ size: 6, offset: 3 }}>\r\n                        <Col>\r\n                          <InputDefault evento={this.preencheNome.bind(this)} valor={nome} size=\"255\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputDefault evento={this.preencheDescricao.bind(this)} valor={descricao} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observa√ß√£o\" descricao=\"Descreva...\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <div className=\"botao\" align=\"right\">\r\n                            <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\r\n                            <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                          </div>\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                </Col>\r\n              </Container>\r\n            </div>\r\n            <div className=\"div_tabela\">\r\n              <div className=\"barra_menu\">\r\n                <div className=\"w-50\">\r\n                  <BarraDePesquisa\r\n                    funcPesquisa={this.barraPesquisa.bind(this)}\r\n                    pesquisa={this.state.barraPesquisa}\r\n                    attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                    indicador=\"nome\"\r\n                    lista={this.state.listaCache} />\r\n                </div>\r\n                <div className=\"w-50\">\r\n                  <Paginacao\r\n                    lista={this.state.lista}\r\n                    total={this.state.lista.length}\r\n                    retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Nome</th>\r\n                    <th>Observa√ß√£o</th>\r\n                    <th className=\"acao\" colspan='3' width=\"5%\">A√ß√£o</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.listaCorrente.map(o => {\r\n                    return (\r\n                      <tr key={o.id}>\r\n                        <td>{o.id}</td>\r\n                        <td>{o.nome}</td>\r\n                        <td>{o.descricao.isEmpty() ? \" - \" : o.descricao}</td>\r\n                        <td className=\"acao\" ><Button onClick={() => this.relacionar(o.id)}>Relacionar</Button></td>\r\n                        <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\r\n                        <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja remover esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Deletar</Button></td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n\r\n                  {\r\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                  }\r\n                </tbody>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                  <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\r\n                  <form>\r\n                    <ModalBody>\r\n                      <Row>\r\n                        <Col>\r\n                          <Col>\r\n                            <InputDefault evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"descricao\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                          </Col>\r\n                          <Col>\r\n                            <InputDefault evento={this.preencheDescricao__.bind(this)} valor={descricao__} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observa√ß√£o\" descricao=\"Descreva...\" />\r\n                          </Col>\r\n                        </Col>\r\n                      </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\r\n                      <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\r\n                    </ModalFooter>\r\n                  </form>\r\n                </Modal>\r\n              </Table>\r\n            </div>\r\n          </ContainerFade>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  };\r\n}\r\n\r\nexport default withRouter(AreaConhecimento)\r\n\r\n","import React from \"react\";\r\nimport {\r\n    Table, Container, Row, Button, Col, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\r\nimport { POST, GET, PUT, DELETE, Loading } from \"../componentes/Request\";\r\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\r\n\r\nclass UnidadeCurricular extends React.Component {\r\n    state = {\r\n        id: \"\",\r\n        nome: \"\",\r\n        descricao: \"\",\r\n        id__: \"\",\r\n        nome__: \"\",\r\n        descricao__: \"\",\r\n        loading: false,\r\n        modal: false,\r\n        inicial: true,\r\n        form: \"none\",\r\n\r\n        listaCache: [],\r\n        lista: [],\r\n        listaCorrente: [],\r\n        barraPesquisa: \"\"\r\n    }\r\n    token = this.props.user.token\r\n    toggle = this.toggle.bind(this);\r\n\r\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n    //fields inserir\r\n    preencheNome(nome) { this.setState({ nome }) }\r\n    preencheDescricao(descricao) { this.setState({ descricao }) }\r\n    limparFormlulario() {\r\n        this.setState({\r\n            nome: \"\",\r\n            descricao: \"\"\r\n        })\r\n    }\r\n    //fields alterar\r\n    preencheId__(id__) { this.setState({ id__ }) }\r\n    preencheNome__(nome__) { this.setState({ nome__ }) }\r\n    preencheDescricao__(descricao__) { this.setState({ descricao__ }) }\r\n    limparFormlulario__() {\r\n        this.setState({\r\n            nome__: \"\",\r\n            descricao__: \"\"\r\n        })\r\n    }\r\n\r\n    componentDidMount() { this.buscar(); }\r\n    // inserir\r\n    inserir = async o => {\r\n        this.setState({ loading: true });\r\n        await POST(\"unidadeCurricular/inserir/\" + this.token, o)\r\n        this.buscar();\r\n    }\r\n    enviaFormulario(event) {\r\n        if (this.state.nome.isEmpty()) {\r\n            alert(\"Insira o nome para enviar\")\r\n            return\r\n        }\r\n        let o = {};\r\n        o.nome = this.state.nome\r\n        o.descricao = this.state.descricao\r\n        this.inserir(o);\r\n    }\r\n    // atualizar\r\n    buscar = () => {\r\n        // segundo atualiza <----------------------------\r\n        GET(\"unidadeCurricular/listar/\" + this.token)\r\n            .then(response => {\r\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n                this.setState({\r\n                    lista: response,\r\n                    listaCache: response,\r\n                    inicial: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({\r\n                    lista: [],\r\n                    listaCache: [],\r\n                    inicial: true\r\n                })\r\n            }).finally(() => {\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n    // remover\r\n    removerLinha = async (id) => {\r\n        this.setState({ loading: true });\r\n        await DELETE(\"unidadeCurricular/remover/\" + id + \"/\" + this.token)\r\n        this.buscar();\r\n    }\r\n    //alterar\r\n    enviaFormulario__(event) {\r\n        if (this.state.nome__.isEmpty()) {\r\n            alert(\"Insira o nome para enviar\")\r\n            return\r\n        }\r\n        let o = {};\r\n        o.nome = this.state.nome__;\r\n        o.descricao = this.state.descricao__;\r\n        o.id = this.state.id__;\r\n        this.alterar(o);\r\n\r\n    }\r\n    alterar = async o => {\r\n        this.setState({ loading: true });\r\n        await PUT(\"unidadeCurricular/alterar/\" + this.token, o)\r\n        this.setState({ modal: false })\r\n        this.buscar();\r\n    }\r\n    buscarPorId = async (id) => {\r\n        this.limparFormlulario__();\r\n        // segundo atualiza <----------------------------\r\n        this.setState({ loading: true })\r\n        let response = await GET(\"unidadeCurricular/buscar/\" + id + \"/\" + this.token)\r\n        this.preencheId__(response.id)\r\n        this.preencheNome__(response.nome)\r\n        this.preencheDescricao__(response.descricao)\r\n        this.setState({\r\n            modal: true\r\n        })\r\n        this.setState({ loading: false })\r\n    }\r\n    //modal\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n            modal: !prevState.modal\r\n        }));\r\n    }\r\n    toggleForm() {\r\n        if (this.state.form === \"none\") {\r\n            this.setState(() => ({\r\n                form: \"block\"\r\n            }));\r\n        }\r\n        if (this.state.form === \"block\") {\r\n            this.setState(() => ({\r\n                form: \"none\"\r\n            }));\r\n        }\r\n    }\r\n\r\n    getRetornaListaCorrente(listaCorrente) {\r\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n            this.setState({ listaCorrente });\r\n        }\r\n    }\r\n\r\n    async barraPesquisa(listaFiltrada) {\r\n        if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n            await this.setState({\r\n                lista: listaFiltrada\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, inicial, nome__, descricao__, nome, descricao } = this.state\r\n\r\n        return <div>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div>\r\n                <Cabecalho user={this.props.user} />\r\n            </div>\r\n            <div className=\"corpo\">\r\n                <Row>\r\n                    <Navegacao user={this.props.user} />\r\n                    <ContainerFade>\r\n                        <Row>\r\n                            <div className=\"titulo\">\r\n                                <h1>Unidade curricular</h1>\r\n                            </div>\r\n                        </Row>\r\n                        <div className=\"cadastro\">\r\n                            <Container>\r\n                                <Button outline onClick={this.toggleForm.bind(this)}>Formul√°rio</Button>\r\n                                <Col style={{ display: this.state.form }}>\r\n                                    <form>\r\n                                        <Row>\r\n                                            <Col xs={{ size: 6, offset: 3 }}>\r\n                                                <Col>\r\n                                                    <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"255\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <InputDefault evento={this.preencheDescricao.bind(this)} valor={descricao} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observa√ß√£o\" descricao=\"Descreva...\" />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <div className=\"botao\" align=\"right\">\r\n                                                        <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\r\n                                                        <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </form>\r\n                                </Col>\r\n                            </Container>\r\n                        </div>\r\n                        <div className=\"div_tabela\">\r\n                            <div className=\"barra_menu\">\r\n                                <div className=\"w-50\">\r\n                                    <BarraDePesquisa\r\n                                        funcPesquisa={this.barraPesquisa.bind(this)}\r\n                                        pesquisa={this.state.barraPesquisa}\r\n                                        attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                                        indicador=\"nome\"\r\n                                        lista={this.state.listaCache} />\r\n                                </div>\r\n                                <div className=\"w-50\">\r\n                                    <Paginacao\r\n                                        lista={this.state.lista}\r\n                                        total={this.state.lista.length}\r\n                                        retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Nome</th>\r\n                                        <th>Observa√ß√£o</th>\r\n                                        <th className=\"acao\" colspan='2' width=\"5%\">A√ß√£o</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.listaCorrente.map(o => {\r\n                                        return (\r\n                                            <tr key={o.id}>\r\n                                                <td>{o.id}</td>\r\n                                                <td>{o.nome}</td>\r\n                                                <td>{o.descricao.isEmpty() ? \" - \" : o.descricao}</td>\r\n                                                <td className=\"acao\" ><Button onClick={() => this.buscarPorId(o.id)}>Alterar</Button></td>\r\n                                                <td className=\"acao\" ><Button onClick={() => { if (window.confirm(\"Deseja remover esse item? \\n#\" + o.id)) this.removerLinha(o.id) }}>Deletar</Button></td>\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                    {\r\n                                        this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                                    }\r\n                                </tbody>\r\n                                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n                                    <ModalHeader toggle={this.toggle}>Alterar</ModalHeader>\r\n                                    <form>\r\n                                        <ModalBody>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Col>\r\n                                                        <InputDefault obrigatorio evento={this.preencheNome__.bind(this)} valor={nome__} size=\"70\" tipo=\"text\" nome=\"descricao\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <InputDefault evento={this.preencheDescricao__.bind(this)} valor={descricao__} size=\"255\" tipo=\"textarea\" nome=\"descricao\" titulo=\"Observa√ß√£o\" descricao=\"Descreva...\" />\r\n                                                    </Col>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ModalBody>\r\n                                        <ModalFooter>\r\n                                            <BotaoResetar resetar={this.limparFormlulario__.bind(this)} />\r\n                                            <BotaoEnviar enviar={this.enviaFormulario__.bind(this)} />\r\n                                        </ModalFooter>\r\n                                    </form>\r\n                                </Modal>\r\n                            </Table>\r\n                        </div>\r\n                    </ContainerFade>\r\n                </Row>\r\n            </div>\r\n        </div >\r\n    };\r\n}\r\n\r\nexport default UnidadeCurricular\r\n\r\n","import React from \"react\";\r\nimport {\r\n  Table, Container, Row, Button, Col, Input\r\n} from \"reactstrap\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { GET, POST } from \"../componentes/Request\";\r\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa } from \"../componentes/corpo\"\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\n\r\nclass GerenciarEmailsProfessores extends React.Component {\r\n  state = {\r\n    check: \"\",\r\n    assunto: \"\",\r\n    corpoEmail: \"\",\r\n    loading: false,\r\n    modal: false,\r\n    form: \"none\",\r\n    desativar: true,\r\n    checkBox: true,\r\n\r\n    lista: [],\r\n    listaCorrente: [],\r\n    listaCache: [],\r\n    barraPesquisa: \"\"\r\n\r\n  }\r\n  token = this.props.user.token\r\n\r\n  preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n  //fields inserir\r\n  preencheAssunto(assunto) { this.setState({ assunto }) }\r\n  preencheCorpoEmail(corpoEmail) { this.setState({ corpoEmail }) }\r\n  limparFormlulario() {\r\n    this.setState({\r\n      assunto: \"\",\r\n      corpoEmail: \"\"\r\n    })\r\n  }\r\n\r\n  preencheCheckbox(id, check) {\r\n    let lista = this.state.lista\r\n    let novaLista = []\r\n    for (let i in lista) {\r\n      let o = {};\r\n      o.id = lista[i].id\r\n      o.matricula = lista[i].matricula\r\n      o.tipo = lista[i].tipo\r\n      o.nome = lista[i].nome\r\n      o.email = lista[i].email\r\n      if (lista[i].id === id) {\r\n        if (check === false) {\r\n          o.check = true\r\n        } else if (check === true) {\r\n          o.check = false\r\n        }\r\n      } else o.check = lista[i].check\r\n      novaLista.push(o)\r\n    }\r\n    this.setState({ lista: novaLista })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.buscar();\r\n  }\r\n\r\n  enviarEmail = async () => {\r\n    if (this.state.form === \"block\") {\r\n      if (window.confirm(\"Deseja mesmo enviar?\")) {\r\n        let lista = this.state.lista\r\n        let listaEnviar = []\r\n        let o = {}\r\n\r\n        o.assunto = this.state.assunto\r\n        o.corpoEmail = this.state.corpoEmail\r\n\r\n        for (let i in lista) {\r\n          if (lista[i].check === true) {\r\n            let o = {};\r\n            o.id = lista[i].id\r\n            o.matricula = lista[i].matricula\r\n            o.tipo = lista[i].tipo\r\n            o.nome = lista[i].nome\r\n            o.email = lista[i].email\r\n            listaEnviar.push(o)\r\n          }\r\n        }\r\n\r\n        o.lista = listaEnviar\r\n        if (!o.assunto.isEmpty() && !o.corpoEmail.isEmpty()) {\r\n          if (o.lista.length > 0) {\r\n            await POST(\"gerenciarEmails/enviarEmail/\" + this.token, o)\r\n              .finally(response => {\r\n                console.log(response)\r\n              })\r\n          } else window.alert(\"Precisa selecionar algu√©m para enviar.\")\r\n        } else window.alert(\"Precisa preencher assunto e conte√∫do, antes de enviar.\")\r\n      }\r\n      // this.verificarEmails();\r\n    } else alert(\"Abra o Corpo do E-mail antes de enviar\")\r\n  }\r\n\r\n  enviarTodosEmails = async () => {\r\n    if (this.state.form === \"block\") {\r\n      let o = {}\r\n      o.assunto = this.state.assunto\r\n      o.corpoEmail = this.state.corpoEmail\r\n      o.lista = []\r\n      if (window.confirm(\"Deseja mesmo enviar?\")) {\r\n        await POST(\"gerenciarEmails/enviarTodosEmails/\" + this.token, o)\r\n          .finally(response => {\r\n            console.log(response)\r\n          })\r\n      }\r\n    } else alert(\"Abra o Corpo do E-mail antes de enviar\")\r\n  }\r\n\r\n  // atualizar\r\n  buscar = () => {\r\n    // segundo atualiza <----------------------------\r\n    GET(\"gerenciarEmails/listarProfessores/\" + this.token)\r\n      .then(response => {\r\n        if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n        this.setState({\r\n          lista: response,\r\n          listaCache: response,\r\n          inicial: false\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        this.setState({\r\n          lista: [],\r\n          listaCache: [],\r\n          inicial: true\r\n        })\r\n      }).finally(() => {\r\n        this.setState({ loading: false })\r\n      })\r\n  }\r\n\r\n  //modal\r\n  checkToggle() {\r\n    this.setState(prevState => ({\r\n      checkBox: !prevState.checkBox\r\n    }));\r\n    let listaAux = []\r\n    for (let item in this.state.lista) {\r\n      let o = this.state.lista[item]\r\n      if (this.state.checkBox)\r\n        o.check = true\r\n      if (!this.state.checkBox)\r\n        o.check = false\r\n\r\n      listaAux.push(o)\r\n    }\r\n    this.setState({\r\n      lista: listaAux\r\n    })\r\n  }\r\n  toggleForm() {\r\n    if (this.state.form === \"none\") {\r\n      this.setState(prevState => ({\r\n        form: \"block\",\r\n        desativar: false\r\n      }));\r\n    }\r\n    if (this.state.form === \"block\") {\r\n      this.setState(prevState => ({\r\n        form: \"none\",\r\n        desativar: true\r\n      }));\r\n    }\r\n  }\r\n\r\n  getRetornaListaCorrente(listaCorrente) {\r\n    if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n      this.setState({ listaCorrente });\r\n    }\r\n  }\r\n\r\n  async barraPesquisa(listaFiltrada) {\r\n    if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n      await this.setState({\r\n        lista: listaFiltrada\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { desativar, checkBox, assunto, corpoEmail, form } = this.state;\r\n\r\n    return <div>\r\n      <div>\r\n        <Cabecalho user={this.props.user} />\r\n      </div>\r\n      <div className=\"corpo\">\r\n        <Row>\r\n          <Navegacao user={this.props.user} />\r\n          <ContainerFade>\r\n            <Row>\r\n              <div className=\"titulo\">\r\n                <h1>Gerenciar e-mails dos professores</h1>\r\n              </div>\r\n            </Row>\r\n            <div className=\"cadastro\">\r\n              <Container>\r\n                <Button outline onClick={this.toggleForm.bind(this)}>Corpo do E-mail</Button>\r\n                <Button disabled={desativar} outline onClick={() => this.enviarEmail()} className=\"enviarTodos\">Selecionados</Button>\r\n                <Button disabled={desativar} outline onClick={() => this.enviarTodosEmails()} className=\"enviarTodos\">Para todos</Button>\r\n                <Col style={{ display: form, marginTop: \"15px\" }}>\r\n                  <form>\r\n                    <Row>\r\n                      <Col xs={{ size: 12 }}>\r\n                        <Col>\r\n                          <InputDefault evento={this.preencheAssunto.bind(this)} valor={assunto} size=\"70\" tipo=\"text\" nome=\"assunto\" titulo=\"Assunto\" descricao=\"Assunto\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <InputDefault evento={this.preencheCorpoEmail.bind(this)} valor={corpoEmail} size=\"3000\" tipo=\"textarea\" nome=\"corpoEmail\" titulo=\"Conte√∫do\" descricao=\"Escreva o aqui...\" />\r\n                        </Col>\r\n                      </Col>\r\n                    </Row>\r\n                  </form>\r\n                </Col>\r\n              </Container>\r\n            </div>\r\n            <div className=\"div_tabela\">\r\n              <div className=\"barra_menu\">\r\n                <div className=\"w-50\">\r\n                  <BarraDePesquisa\r\n                    funcPesquisa={this.barraPesquisa.bind(this)}\r\n                    pesquisa={this.state.barraPesquisa}\r\n                    attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                    indicador=\"nome\"\r\n                    lista={this.state.listaCache} />\r\n                </div>\r\n                <div className=\"w-50\">\r\n\r\n                  <Paginacao\r\n                    lista={this.state.lista}\r\n                    total={this.state.lista.length}\r\n                    retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Table>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"checkAll\" width=\"7%\">\r\n                      <Input checked={!checkBox} type=\"checkbox\" id=\"check\" className=\"checkmark\" name=\"check\" onClick={() => this.checkToggle()} />\r\n                    </th>\r\n                    <th width=\"10%\">Matr√≠cula</th>\r\n                    <th width=\"10%\">Tipo</th>\r\n                    <th width=\"35%\">Professor</th>\r\n                    <th width=\"35%\">E-mail</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.listaCorrente.map(o => {\r\n                    if (o.check === undefined) o.check = false;\r\n                    return (\r\n                      <tr onClick={() => this.preencheCheckbox(o.id, o.check)} key={o.id}>\r\n                        <td className=\"acao\" >\r\n                          <Input checked={o.check} type=\"checkbox\" id=\"check\" className=\"checkmark\" name=\"check\" />\r\n                        </td>\r\n                        <td>{o.matricula}</td>\r\n                        <td>{o.tipo}</td>\r\n                        <td>{o.nome}</td>\r\n                        <td>{o.email}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                  {\r\n                    this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                  }\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </ContainerFade>\r\n        </Row>\r\n      </div >\r\n    </div >\r\n  };\r\n}\r\nexport default GerenciarEmailsProfessores\r\n\r\n","import React from \"react\";\r\nimport {\r\n    Input, Table, Row\r\n} from \"reactstrap\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { POST, GET, Loading } from \"../componentes/Request\";\r\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, LinhaImaginaria, BarraDePesquisa } from \"../componentes/corpo\"\r\n\r\nclass Disponibilidade extends React.Component {\r\n    state = {\r\n        lista: [],\r\n        html: [],\r\n        loading: false,\r\n        id: 0,\r\n        matricula: \"\",\r\n        tipo: \"\",\r\n        nome: \"\",\r\n        data: \"\",\r\n        email: \"\",\r\n        disableCheckbox: true,\r\n        item: {\r\n            segM: false, segT: false, segN: false,\r\n            terM: false, terT: false, terN: false,\r\n            quaM: false, quaT: false, quaN: false,\r\n            quiM: false, quiT: false, quiN: false,\r\n            sexM: false, sexT: false, sexN: false,\r\n            sabM: false, sabT: false, sabN: false,\r\n            domM: false, domT: false, domN: false\r\n        },\r\n        listaCorrente: [],\r\n        listaCache: [],\r\n        barraPesquisa: \"\"\r\n\r\n    }\r\n    token = this.props.user.token\r\n    attItem = this.attItem.bind(this)\r\n\r\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n    permissaoStatus = {\r\n        PROFESSOR: () => {\r\n            this.buscaItem(this.props.user.id)\r\n        },\r\n        ADMINISTRADOR: () => {\r\n            this.buscar()\r\n        }\r\n    }\r\n\r\n    componentDidMount() { this.permissaoStatus[this.props.user.permissao](); this.limpaItem() }\r\n\r\n    limpaDescricao() {\r\n        this.setState({\r\n            id: 0,\r\n            matricula: \"\",\r\n            tipo: \"\",\r\n            nome: \"\",\r\n            data: \"\",\r\n            email: \"\"\r\n        })\r\n    }\r\n\r\n    buscaItem(id) {\r\n        this.setState({\r\n            loading: true,\r\n            disableCheckbox: true\r\n        })\r\n        this.limpaDescricao()\r\n        this.setState({\r\n            id: id\r\n        })\r\n        GET(\"disponibilidade/buscarItem/\" + id + \"/\" + this.token)\r\n            .then(response => {\r\n                console.log(response.disponibilidade)\r\n                if (response.disponibilidade !== undefined) {\r\n                    console.log(response.id)\r\n                    this.setState({\r\n                        id: response.id,\r\n                        nome: response.nome,\r\n                        matricula: response.matricula,\r\n                        tipo: response.tipo,\r\n                        email: response.email,\r\n                        data: response.data\r\n                    })\r\n                    let it = Object.keys(response.disponibilidade)\r\n                    for (let i in it) {\r\n                        this.compoemTabela(it[i], response.disponibilidade[it[i]])\r\n                    }\r\n                } else this.limpaItem()\r\n            }).catch(() => {\r\n                console.log(\" errroooooooooooooooooooooooooooo \")\r\n                this.setState({\r\n                    id: 0\r\n                })\r\n            }).finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                    disableCheckbox: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    compoemTabela(b, v) {\r\n        if (typeof v !== 'object') {\r\n            this.setState({\r\n                html: []\r\n            })\r\n            let auxilar = false;\r\n            let aProps = Object.getOwnPropertyNames(this.state.item);\r\n            for (let i = 0; i < aProps.length; i++) {\r\n                auxilar = false;\r\n                if (aProps[i] === b) {\r\n                    auxilar = true;\r\n                    this.state.item[b] = v\r\n                }\r\n            }\r\n            if (this.state.html.length !== 0) {\r\n                this.setStatbe(html => ({\r\n                    html: html.html.splice(0, 1),\r\n                }))\r\n            }\r\n            if (auxilar)\r\n                this.state.html.push(this.state.item)\r\n        }\r\n    }\r\n    limpaItem() {\r\n        this.setState({\r\n            item: {\r\n                segM: false, segT: false, segN: false,\r\n                terM: false, terT: false, terN: false,\r\n                quaM: false, quaT: false, quaN: false,\r\n                quiM: false, quiT: false, quiN: false,\r\n                sexM: false, sexT: false, sexN: false,\r\n                sabM: false, sabT: false, sabN: false,\r\n                domM: false, domT: false, domN: false\r\n            }\r\n        })\r\n    }\r\n\r\n    attItem(v, e) {\r\n        this.state.item[e] = !v\r\n        this.setState(html => ({\r\n            html: html.html.splice(0, 1),\r\n        }))\r\n        this.state.html.push(this.state.item)\r\n        this.enviaItem()\r\n    }\r\n\r\n    enviaItem() {\r\n        let o = {}\r\n        o.id = this.state.id\r\n        o.disponibilidade = this.state.item\r\n        POST(\"disponibilidade/inserirCheck/\" + this.token, o, false)\r\n    }\r\n\r\n    buscar = () => {\r\n        // segundo atualiza <----------------------------\r\n        this.setState({ loading: true })\r\n        GET(\"gerenciarEmails/listarProfessores/\" + this.token)\r\n            .then(response => {\r\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n                this.setState({\r\n                    lista: response,\r\n                    listaCache: response,\r\n                    inicial: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({\r\n                    lista: [],\r\n                    listaCache: [],\r\n                    inicial: true\r\n                })\r\n            }).finally(() => {\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    getRetornaListaCorrente(listaCorrente) {\r\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n            this.setState({ listaCorrente });\r\n        }\r\n    }\r\n\r\n    async barraPesquisa(listaFiltrada) {\r\n        if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n            await this.setState({\r\n                lista: listaFiltrada\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { disableCheckbox, loading, id, matricula, tipo, nome, email, data } = this.state\r\n        const { segM, segT, segN,\r\n            terM, terT, terN,\r\n            quaM, quaT, quaN,\r\n            quiM, quiT, quiN,\r\n            sexM, sexT, sexN,\r\n            sabM, sabT, sabN,\r\n            domM, domT, domN } = this.state.item\r\n\r\n        return <div>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div>\r\n                <Cabecalho user={this.props.user} />\r\n            </div>\r\n            <div className=\"corpo\" id=\"corpo\">\r\n                <Row>\r\n                    <Navegacao user={this.props.user} />\r\n                    <ContainerFade>\r\n                        <Row>\r\n                            <div className=\"titulo\">\r\n                                <h1>Disponibilidade</h1>\r\n                            </div>\r\n                        </Row>\r\n                        <Table>\r\n                            <thead>\r\n                                <td className=\"acao\" width=\"5%\">id: {id === 0 ? \"#\" : id}</td>\r\n                                <td>Matr√≠cula: {matricula === \"\" ? \"#\" : matricula}</td>\r\n                                <td>Nome: {nome === \"\" ? \"#\" : nome}</td>\r\n                                <tr style={{ backgroundColor: \"transparent\", color: \"black\" }}>\r\n                                    <td style={{width: \"15%\"}}>Tipo: {tipo === \"\" ? \"#\" : tipo}</td>\r\n                                    <td>Ultima Altera√ß√£o: {data === \"\" ? \"#\" : data.formatDate()}</td>\r\n                                    <td>E-mail: {email === \"\" ? \"#\" : email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"acao\" width=\"5%\">#</th>\r\n                                    <th style={{ textAlign: \"center\" }} width=\"31.66666%\">Manh√£</th>\r\n                                    <th style={{ textAlign: \"center\" }} width=\"31.66666%\">Tarde</th>\r\n                                    <th style={{ textAlign: \"center\" }} width=\"31.66666%\">Noite</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Segunda</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(segM, \"segM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={segM} type=\"checkbox\" name=\"segM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(segT, \"segT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={segT} type=\"checkbox\" name=\"segT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(segN, \"segN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={segN} type=\"checkbox\" name=\"segN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Ter√ßa</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(terM, \"terM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={terM} type=\"checkbox\" name=\"terM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(terT, \"terT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={terT} type=\"checkbox\" name=\"terT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(terN, \"terN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={terN} type=\"checkbox\" name=\"terN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Quarta</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quaM, \"quaM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={quaM} type=\"checkbox\" name=\"quaM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quaT, \"quaT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={quaT} type=\"checkbox\" name=\"quaT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quaN, \"quaN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={quaN} type=\"checkbox\" name=\"quaN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Quinta</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quiM, \"quiM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={quiM} type=\"checkbox\" name=\"quiM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quiT, \"quiT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={quiT} type=\"checkbox\" name=\"quiT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(quiN, \"quiN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={quiN} type=\"checkbox\" name=\"quiN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Sexta</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sexM, \"sexM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={sexM} type=\"checkbox\" name=\"sexM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sexT, \"sexT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={sexT} type=\"checkbox\" name=\"sexT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sexN, \"sexN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={sexN} type=\"checkbox\" name=\"sexN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Sabado</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sabM, \"sabM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={sabM} type=\"checkbox\" name=\"sabM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sabT, \"sabT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={sabT} type=\"checkbox\" name=\"sabT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(sabN, \"sabN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={sabN} type=\"checkbox\" name=\"sabN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th>Domingo</th>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(domM, \"domM\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={domM} type=\"checkbox\" name=\"domM\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(domT, \"domT\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={domT} type=\"checkbox\" name=\"domT\" className=\"checkmark\" />\r\n                                    </td>\r\n                                    <td className=\"acao\" onClick={disableCheckbox === false ? () => this.attItem(domN, \"domN\") : null}>\r\n                                        <Input disabled={disableCheckbox} checked={domN} type=\"checkbox\" name=\"domN\" className=\"checkmark\" />\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                        <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                            <div className=\"div_tabela\">\r\n                                <div className=\"barra_menu\">\r\n                                    <div className=\"w-50\">\r\n                                        <BarraDePesquisa\r\n                                            funcPesquisa={this.barraPesquisa.bind(this)}\r\n                                            pesquisa={this.state.barraPesquisa}\r\n                                            attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                                            indicador=\"nome\"\r\n                                            lista={this.state.listaCache} />\r\n                                    </div>\r\n                                    <div className=\"w-50\">\r\n                                        <Paginacao\r\n                                            lista={this.state.lista}\r\n                                            total={this.state.lista.length}\r\n                                            retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <a href=\"#corpo\">\r\n                                    <Table>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>ID</th>\r\n                                                <th>Professor</th>\r\n                                                <th>Matr√≠cula</th>\r\n                                                <th>Tipo</th>\r\n                                                <th>E-mail</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.listaCorrente.map(o => {\r\n                                                let focus = {}\r\n                                                if (o.id === this.state.id) focus = { backgroundColor: '#009785', color: \"white\" }\r\n                                                return (\r\n                                                    <tr style={focus} key={o.id} onClick={() => this.buscaItem(o.id)}>\r\n                                                        <td>{o.id}</td>\r\n                                                        <td>{o.nome}</td>\r\n                                                        <td>{o.matricula}</td>\r\n                                                        <td>{o.tipo}</td>\r\n                                                        <td>{o.email}</td>\r\n                                                    </tr>\r\n                                                );\r\n                                            })}\r\n                                            {\r\n                                                this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </a>\r\n                            </div>\r\n                        </LinhaImaginaria>\r\n                    </ContainerFade>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\nexport default Disponibilidade\r\n\r\n","import React from \"react\";\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\nimport { Container, Input, Row, Table } from \"reactstrap\";\r\nimport { Cabecalho, ContainerFade, Navegacao, BarraInicial, LinhaImaginaria, BarraDePesquisa } from \"../componentes/corpo\";\r\nimport { GET, Loading, POST } from \"../componentes/Request\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass Competencia extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        listaProfessores: [],\r\n        modalidade: [],\r\n        unidadeCurricular: [],\r\n        unidadeCurricularListaPesquisa: [],\r\n        unidadeCurricularListaTouch: [],\r\n        areaConhecimento: [],\r\n        cacheModalidade: [],\r\n        cacheUnidadeCurricular: [],\r\n        cacheAreaConhecimento: [],\r\n        count: 0,\r\n        id: 0,\r\n        matricula: \"\",\r\n        tipo: \"\",\r\n        nome: \"\",\r\n        email: \"\",\r\n        disableCheckbox: true,\r\n        listaCorrente: [],\r\n        listaCache: [],\r\n        barraPesquisa: \"\"\r\n    }\r\n    token = this.props.user.token\r\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this)\r\n\r\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n    async touchUnidadeCurricular(i, valor) {\r\n        await this.setState({\r\n            unidadeCurricularListaTouch: valor,\r\n            unidadeCurricular:\r\n                this.state.cacheUnidadeCurricular.filter(value => {\r\n                    if (valor == null | valor == undefined)\r\n                        return true\r\n                    return value.nome.includes(valor.nome) ? true : false\r\n                })\r\n        })\r\n    }\r\n    async checkToggleUnidadeCurricular(id) {\r\n\r\n        await this.setState({\r\n            unidadeCurricular: this.setCheck(this.state.unidadeCurricular, id),\r\n            cacheUnidadeCurricular: this.setCheck(this.state.cacheUnidadeCurricular, id),\r\n        })\r\n        this.setUnidadeCurricular()\r\n    }\r\n    permissaoStatus = {\r\n        PROFESSOR: () => {\r\n            this.buscaItem(this.props.user.id)\r\n        },\r\n        ADMINISTRADOR: () => {\r\n            this.buscarProfessores()\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getModalidade()\r\n        this.getAreaConhecimento()\r\n        this.getUnidadeCurricular()\r\n        this.permissaoStatus[this.props.user.permissao]()\r\n    }\r\n    limpaDescricao() {\r\n        this.setState({\r\n            id: 0,\r\n            matricula: \"\",\r\n            tipo: \"\",\r\n            nome: \"\",\r\n            email: \"\",\r\n            modalidade: this.state.cacheModalidade,\r\n            unidadeCurricular: this.state.cacheUnidadeCurricular,\r\n            areaConhecimento: this.state.cacheAreaConhecimento,\r\n\r\n        })\r\n    }\r\n\r\n    buscaItem(id) {\r\n        this.setState({\r\n            loading: true,\r\n            disableCheckbox: true\r\n        })\r\n        this.limpaDescricao()\r\n        this.setState({\r\n            id: id\r\n        })\r\n        GET(\"competencia/buscarItem/\" + id + \"/\" + this.token)\r\n            .then(response => {\r\n                let modalidade = this.limparCheck(this.state.cacheModalidade)\r\n                response.modalidade.forEach(item => {\r\n                    modalidade = this.setCheck(modalidade, item.id)\r\n                })\r\n\r\n                let areaconhecimento = this.limparCheck(this.state.cacheAreaConhecimento)\r\n                response.areaconhecimento.forEach(item => {\r\n                    areaconhecimento = this.setCheck(areaconhecimento, item.id)\r\n                })\r\n\r\n                let unidadeCurricular = []\r\n                areaconhecimento.forEach(elem => {\r\n                    const newLista = elem.unidadeCurricular.filter(elem => {\r\n                        return unidadeCurricular.filter(elemUnidade => {\r\n                            return elemUnidade.id == elem.id\r\n                        }).length == 0\r\n                    })\r\n                    if (elem.check) unidadeCurricular = unidadeCurricular.concat(newLista)\r\n                })\r\n\r\n                unidadeCurricular = this.limparCheck(unidadeCurricular)\r\n                response.unidadecurricular.forEach(elem => {\r\n                    unidadeCurricular = this.setCheck(unidadeCurricular, elem.id)\r\n                })\r\n\r\n                this.setState({\r\n                    id: response.id,\r\n                    nome: response.nome,\r\n                    matricula: response.matricula,\r\n                    tipo: response.tipo,\r\n                    email: response.email,\r\n                    unidadeCurricular: unidadeCurricular,\r\n                    cacheUnidadeCurricular: unidadeCurricular,\r\n                    unidadeCurricularListaPesquisa: unidadeCurricular\r\n                })\r\n                if (modalidade.length > 0)\r\n                    this.setState({\r\n                        modalidade: modalidade,\r\n                    })\r\n\r\n                if (areaconhecimento.length > 0)\r\n                    this.setState({\r\n                        areaConhecimento: areaconhecimento,\r\n                    })\r\n            }).catch(() => {\r\n                console.log(\" errroooooooooooooooooooooooooooo \")\r\n                this.setState({\r\n                    id: 0\r\n                })\r\n            }).finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                    disableCheckbox: false\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    buscarProfessores = () => {\r\n        // segundo atualiza <----------------------------\r\n        this.setState({ loading: true })\r\n        GET(\"gerenciarEmails/listarProfessores/\" + this.token)\r\n            .then(response => {\r\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n                this.setState({\r\n                    listaProfessores: response,\r\n                    listaCache: response,\r\n                    inicial: false\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({\r\n                    listaProfessores: [],\r\n                    listaCache: [],\r\n                    inicial: true\r\n                })\r\n            }).finally(() => {\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    async getModalidade() {\r\n        this.carregamentoInicial()\r\n        let response = await GET(\"competencia/pegamodalidades/\" + this.token)\r\n        if (response != null && response != undefined) {\r\n            this.setState({\r\n                modalidade: response,\r\n                cacheModalidade: response,\r\n            })\r\n        }\r\n        this.finalizarCarregamentoInicial()\r\n    }\r\n    async getAreaConhecimento() {\r\n        this.carregamentoInicial()\r\n        let response = await GET(\"competencia/pegaareaconhecimentos/\" + this.token)\r\n        if (response != null && response != undefined) {\r\n            this.setState({\r\n                areaConhecimento: response,\r\n                cacheAreaConhecimento: response,\r\n            })\r\n        }\r\n        this.finalizarCarregamentoInicial()\r\n    }\r\n    async getUnidadeCurricular() {\r\n        this.carregamentoInicial()\r\n        let response = await GET(\"competencia/pegaunidadecurriculares/\" + this.token)\r\n        if (response != null && response != undefined) {\r\n            this.setState({\r\n                unidadeCurricular: response,\r\n                cacheUnidadeCurricular: response,\r\n                unidadeCurricularListaPesquisa: response\r\n\r\n            })\r\n        }\r\n        this.finalizarCarregamentoInicial()\r\n    }\r\n\r\n    carregamentoInicial() {\r\n        this.setState({\r\n            count: this.state.count++\r\n        })\r\n    }\r\n    finalizarCarregamentoInicial() {\r\n        this.setState({\r\n            count: this.state.count--\r\n        })\r\n        if (this.state.count == 0) {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    async checkToggleModalidade(id) {\r\n        await this.setState({ modalidade: this.setCheck(this.state.modalidade, id) })\r\n        this.setModalidade()\r\n    }\r\n    async checkToggleAreaConhecimento(id) {\r\n        await this.setState({ areaConhecimento: this.setCheck(this.state.areaConhecimento, id) })\r\n        this.setAreaConhecimento()\r\n    }\r\n\r\n\r\n    async setModalidade() {\r\n        let o = {}\r\n        o.id = this.state.id;\r\n        o.modalidade = this.ForEachItemArray(this.state.modalidade)\r\n        await POST(\"competencia/inseremodalidade/\" + this.token, o)\r\n    }\r\n    async setAreaConhecimento() {\r\n        let o = {}\r\n        o.id = this.state.id;\r\n        o.areaconhecimento = this.ForEachItemArray(this.state.areaConhecimento)\r\n        await POST(\"competencia/insereareaconhecimento/\" + this.token, o)\r\n        await this.setUnidadeCurricular()\r\n        this.buscaItem(this.state.id)\r\n    }\r\n    async setUnidadeCurricular() {\r\n        let o = {}\r\n        o.id = this.state.id;\r\n        o.unidadecurricular = this.ForEachItemArray(this.state.cacheUnidadeCurricular)\r\n        await POST(\"competencia/insereunidadecurricular/\" + this.token, o)\r\n    }\r\n\r\n    ForEachItemArray(list) {\r\n        let aux = []\r\n        this.filterCheck(list).forEach(item => {\r\n            if (item.check == true)\r\n                aux.push({ 'id': item.id })\r\n        });\r\n        return aux;\r\n    }\r\n\r\n    filterCheck(lista) {\r\n        return lista.filter(item => {\r\n            return item.check == true;\r\n        })\r\n    }\r\n\r\n    setCheck(lista, id) {\r\n        let novaLista = []\r\n        lista.forEach(item => {\r\n            if (item.id == id) {\r\n                novaLista.push({ ...item, check: !item.check })\r\n            } else {\r\n                novaLista.push({ ...item })\r\n            }\r\n        });\r\n\r\n        return novaLista\r\n    }\r\n\r\n    limparCheck(lista) {\r\n        let novaLista = []\r\n        lista.forEach(item => {\r\n            novaLista.push({ ...item, check: false })\r\n        });\r\n\r\n        return novaLista\r\n    }\r\n\r\n    getRetornaListaCorrente(listaCorrente) {\r\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n            this.setState({ listaCorrente });\r\n        }\r\n    }\r\n\r\n    async barraPesquisa(listaFiltrada) {\r\n        if (!ArrayCompare(this.state.listaProfessores, listaFiltrada)) {\r\n            await this.setState({\r\n                listaProfessores: listaFiltrada\r\n            })\r\n        }\r\n    }\r\n\r\n    organizaListaPorNome(lista) {\r\n        return lista.sort((a, b) => {\r\n            return a.nome.localeCompare(b.nome);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { disableCheckbox, loading, unidadeCurricular, unidadeCurricularListaPesquisa, unidadeCurricularListaTouch, id, matricula, tipo, nome, email } = this.state\r\n\r\n        return <div>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div>\r\n                <Cabecalho user={this.props.user} />\r\n            </div>\r\n            <div className=\"corpo\">\r\n                <Row>\r\n                    <Navegacao user={this.props.user} />\r\n                    <ContainerFade>\r\n                        <Row>\r\n                            <div className=\"titulo\">\r\n                                <h1>Compet√™ncia</h1>\r\n                            </div>\r\n                        </Row>\r\n                        <div id=\"corpo\" className=\"cadastro\">\r\n                            <Container >\r\n                                <div className=\"descriptionbox\">\r\n                                    <div className=\"flexbox\" style={{ borderTop: \"1px solid #dee2e6\" }}>\r\n                                        <div className=\"w-3\">id: {id === 0 ? \"#\" : id}</div>\r\n                                        <div className=\"w-3\">Matr√≠cula: {matricula === \"\" ? \"#\" : matricula}</div>\r\n                                        <div className=\"w-3\">Nome: {nome === \"\" ? \"#\" : nome}</div>\r\n                                    </div>\r\n                                    <div className=\"flexbox\" style={{ borderTop: \"1px solid #dee2e6\" }}>\r\n                                        <div className=\"w-3\">E-mail: {email === \"\" ? \"#\" : email}</div>\r\n                                        <div className=\"w-3\" style={{ width: \"15%\" }}>Tipo: {tipo === \"\" ? \"#\" : tipo}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"flexbox\">\r\n                                    <div className=\"w-3\">\r\n                                        <div className=\"boxContainer\">\r\n                                            <div className=\"boxtitle\">Modalidade</div>\r\n                                            <div className=\"boxItens\">\r\n                                                {\r\n                                                    this.organizaListaPorNome(this.state.modalidade).map(res => {\r\n                                                        if (res.check === undefined) res.check = false;\r\n                                                        return (\r\n                                                            <div onClick={disableCheckbox == false ? () => this.checkToggleModalidade(res.id) : null} className=\"boxfields\">\r\n                                                                <div className=\"fieldsLabel\">{res.nome}</div>\r\n                                                                <div className=\"fieldsCheck\">\r\n                                                                    <Input disabled={disableCheckbox} checked={res.check} type=\"checkbox\" id=\"check\" className=\"checkCompetencia\" name=\"check\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                {\r\n                                                    this.state.areaConhecimento.length > 0 ? <BarraInicial exec={false} message='' colspan=\"1\" /> : <BarraInicial exec={true} message={(<span style={{ fontSize: \"14px\" }}>N√£o possui itens para carregar.</span>)} colspan=\"1\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"w-3\">\r\n                                        <div className=\"boxContainer\">\r\n                                            <div className=\"boxtitle\">√Årea de conhecimento</div>\r\n                                            <div className=\"boxItens\">\r\n                                                {\r\n                                                    this.organizaListaPorNome(this.state.areaConhecimento).map(res => {\r\n                                                        if (res.check === undefined) res.check = false;\r\n                                                        return (\r\n                                                            <div onClick={disableCheckbox == false ? () => this.checkToggleAreaConhecimento(res.id) : null} className=\"boxfields\">\r\n                                                                <div className=\"fieldsLabel\">{res.nome}</div>\r\n                                                                <div className=\"fieldsCheck\">\r\n                                                                    <Input disabled={disableCheckbox} checked={res.check} type=\"checkbox\" id=\"check\" className=\"checkCompetencia\" name=\"check\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                {\r\n                                                    this.state.areaConhecimento.length > 0 ? <BarraInicial exec={false} message='' colspan=\"1\" /> : <BarraInicial exec={true} message={(<span style={{ fontSize: \"14px\" }}>N√£o possui itens para carregar.</span>)} colspan=\"1\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"w-3\">\r\n                                        <div className=\"boxContainer\">\r\n                                            <div className=\"boxtitle\">Unidade Curricular</div>\r\n                                            <Autocomplete\r\n                                                options={unidadeCurricularListaPesquisa}\r\n                                                value={unidadeCurricularListaTouch}\r\n                                                onChange={this.touchUnidadeCurricular}\r\n                                                getOptionLabel={(option) => option.nome}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"standard\"\r\n                                                        label=\"Pesquisar\"\r\n                                                        placeholder=\"Escolha...\"\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                            <div className=\"boxItens\">\r\n                                                {\r\n\r\n                                                    this.organizaListaPorNome(unidadeCurricular).map(res => {\r\n                                                        if (res.check === undefined) res.check = false;\r\n                                                        return (\r\n                                                            <div onClick={disableCheckbox == false ? () => this.checkToggleUnidadeCurricular(res.id) : null} className=\"boxfields\">\r\n                                                                <div className=\"fieldsLabel\">{res.nome}</div>\r\n                                                                <div className=\"fieldsCheck\">\r\n                                                                    <Input disabled={disableCheckbox} checked={res.check} type=\"checkbox\" id=\"check\" className=\"checkCompetencia\" name=\"check\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                {\r\n                                                    unidadeCurricular.length > 0 ? <BarraInicial exec={false} message='' colspan=\"1\" /> : <BarraInicial exec={true} message={(<span style={{ fontSize: \"14px\" }}>Selecione uma Area de conhecimento.</span>)} colspan=\"1\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Container>\r\n                            <LinhaImaginaria permissao={this.props.user.permissao} linha=\"ADMINISTRADOR\">\r\n                                <div className=\"div_tabela\">\r\n                                    <div className=\"barra_menu\">\r\n                                        <div className=\"w-50\">\r\n                                            <BarraDePesquisa\r\n                                                funcPesquisa={this.barraPesquisa.bind(this)}\r\n                                                pesquisa={this.state.barraPesquisa}\r\n                                                attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                                                indicador=\"nome\"\r\n                                                lista={this.state.listaCache} />\r\n                                        </div>\r\n                                        <div className=\"w-50\">\r\n                                            <Paginacao\r\n                                                lista={this.state.listaProfessores}\r\n                                                total={this.state.listaProfessores.length}\r\n                                                retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <a href=\"#corpo\">\r\n                                        <Table>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>ID</th>\r\n                                                    <th>Matr√≠cula</th>\r\n                                                    <th>Professor</th>\r\n                                                    <th>tipo</th>\r\n                                                    <th>E-mail</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.listaCorrente.map(o => {\r\n                                                    let focus = {}\r\n                                                    if (o.id === this.state.id) focus = { backgroundColor: '#009785', color: \"white\" }\r\n                                                    return (\r\n                                                        <tr style={focus} key={o.id} onClick={() => this.buscaItem(o.id)}>\r\n                                                            <td>{o.id}</td>\r\n                                                            <td>{o.matricula}</td>\r\n                                                            <td>{o.nome}</td>\r\n                                                            <td>{o.tipo}</td>\r\n                                                            <td>{o.email}</td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })}\r\n                                                {\r\n                                                    this.state.listaProfessores.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </a>\r\n                                </div>\r\n                            </LinhaImaginaria>\r\n                        </div>\r\n                    </ContainerFade>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    };\r\n}\r\n\r\nexport default Competencia\r\n\r\n","import React from \"react\";\r\nimport {\r\n    Container, Row, Col\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { BotaoEnviar, BotaoResetar } from \"../componentes/botoes\";\r\nimport { POST, GET, Loading } from \"../componentes/Request\";\r\nimport { EmailDeConfirmacao } from \"../componentes/corpo\"\r\n\r\nclass CadastroTelaInicial extends React.Component {\r\n    state = {\r\n        nome: \"\",\r\n        email: \"\",\r\n        telefone: \"\",\r\n        permissao: \"\",\r\n        senha: \"\",\r\n        confirmar: \"\",\r\n        matricula: \"\",\r\n        tipo: \"\",\r\n        toggleModalConfirmacao: false,\r\n        tokenCadastroCache: \"\",\r\n        loading: false,\r\n    }\r\n\r\n    //fields inserir\r\n    preencheNome(nome) { this.setState({ nome }) }\r\n    preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\r\n    preencheTelefone(telefone) { this.setState({ telefone: telefone.maskTelefone() }) }\r\n    preenchePermissao(permissao) { this.setState({ permissao }) }\r\n    preencheSenha(senha) { this.setState({ senha }) }\r\n    preencheConfirmar(confirmar) { this.setState({ confirmar }) }\r\n    preencheMatricula(matricula) { this.setState({ matricula }) }\r\n    preencheTipo(tipo) { this.setState({ tipo }) }\r\n    limparFormlulario() {\r\n        this.setState({\r\n            nome: \"\",\r\n            email: \"\",\r\n            telefone: \"\",\r\n            permissao: \"\",\r\n            senha: \"\",\r\n            confirmar: \"\",\r\n            matricula: \"\",\r\n            tipo: \"\"\r\n        })\r\n    }\r\n\r\n    enviaFormulario(event) {\r\n        let st = this.state\r\n        if (\r\n            !st.nome.isEmpty() &&\r\n            !st.email.isEmpty() &&\r\n            (\r\n                (!st.telefone.isEmpty() && st.telefone.length >= 14 && st.telefone.length <= 15) ||\r\n                st.telefone.isEmpty()\r\n            ) &&\r\n            (!st.tipo.isEmpty() && !st.tipo.equals(\"SELECIONE\")) &&\r\n            !st.senha.isEmpty() &&\r\n            !st.confirmar.isEmpty()\r\n        ) {\r\n            if (st.email.isEmail()) {\r\n                if (st.senha.length > 4) {\r\n                    if (st.senha.equals(st.confirmar)) {\r\n                        let o = {};\r\n                        o.nome = st.nome;\r\n                        o.email = st.email;\r\n                        o.tipo = st.tipo;\r\n                        o.matricula = st.matricula;\r\n                        o.telefone = st.telefone;\r\n                        o.senha = st.senha;\r\n                        this.inserir(o);\r\n                    } else alert(\"\\\"Confirmar senha\\\" precisa ser exatamente igual a senha.\")\r\n                } else alert(\"A senha precisa ter pelo menos 5 letras, e no m√°ximo 10 letras.\")\r\n            } else alert(\"Digite um e-mail v√°lido.\")\r\n        } else alert(\"Insira os dados para enviar\")\r\n\r\n    }\r\n\r\n    inserir = async o => {\r\n        this.setState({ loading: true });\r\n        await POST(\"professor/inserirProfessor/telaInicial/professor\", o, undefined, (ok) => {\r\n            this.toggleModalConfirmacaoFunc(true)\r\n        })\r\n            .then(response => {\r\n                this.setState({\r\n                    tokenCadastroCache: response\r\n                })\r\n            })\r\n            .finally(() => {\r\n                this.setState({ loading: false });\r\n            })\r\n\r\n    }\r\n\r\n    toggleModalConfirmacaoFunc(callback) {\r\n        if (callback != undefined)\r\n            this.setState({\r\n                toggleModalConfirmacao: callback,\r\n            });\r\n        if (callback == false) window.location.href = \"/\";\r\n    }\r\n\r\n    async reenviarEmail() {\r\n        await GET(\"professor/enviarEmailCadastro/\" + this.state.tokenCadastroCache).then(() => {\r\n            alert(\"Verifique sua caixa de entrada e pasta de span, isso pode levar alguns minutos.\")\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { nome, email, telefone, senha, confirmar, matricula, tipo, loading, toggleModalConfirmacao } = this.state;\r\n        return <>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div className=\"corpoTelaInicial\">\r\n                <div className=\"cadastro\">\r\n                    <Container>\r\n                        <Col>\r\n                            <form>\r\n                                <Row>\r\n                                    <Col xs={{ size: 8, offset: 2 }}>\r\n                                        <Col>\r\n                                            <InputDefault obrigatorio evento={this.preencheNome.bind(this)} valor={nome} size=\"70\" tipo=\"text\" nome=\"nome\" titulo=\"Nome\" descricao=\"Digite um nome\" />\r\n                                        </Col>\r\n                                        <Row>\r\n                                            <Col md={{ size: 6 }}>\r\n                                                <InputDefault obrigatorio evento={this.preencheMatricula.bind(this)} valor={matricula} size=\"10\" tipo=\"text\" nome=\"matricula\" titulo=\"Matr√≠cula\" descricao=\"Digite a sua matr√≠cula\" />\r\n                                            </Col>\r\n                                            <Col md={{ size: 6 }}>\r\n                                                <InputDefault obrigatorio evento={this.preencheTipo.bind(this)} valor={tipo} tipo=\"select\" name=\"tipo\" titulo=\"Modalidade\">\r\n                                                    <option value=\"SELECIONE\">Selecione...</option>\r\n                                                    <option>HORISTA</option>\r\n                                                    <option>MENSALISTA</option>\r\n                                                </InputDefault>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <InputDefault obrigatorio evento={this.preencheEmail.bind(this)} valor={email} size=\"255\" tipo=\"text\" nome=\"email\" titulo=\"Email\" descricao=\"Digite um email\" />\r\n                                        </Col>\r\n                                        <Row>\r\n                                            <Col md={{ size: 6 }}>\r\n                                                <InputDefault evento={this.preencheTelefone.bind(this)} valor={telefone} tipo=\"text\" nome=\"telefone\" titulo=\"Telefone\" descricao=\"Digite um telefone\" />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col md={{ size: 6 }}>\r\n                                                <InputDefault obrigatorio evento={this.preencheSenha.bind(this)} size=\"10\" valor={senha} tipo=\"password\" nome=\"senha\" titulo=\"Senha\" descricao=\"Digite uma senha\" />\r\n                                            </Col>\r\n                                            <Col md={{ size: 6 }}>\r\n                                                <InputDefault obrigatorio evento={this.preencheConfirmar.bind(this)} size=\"10\" valor={confirmar} tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme a senha\" />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Col>\r\n                                            <div className=\"botao\" align=\"right\">\r\n                                                <BotaoResetar resetar={this.limparFormlulario.bind(this)} />\r\n                                                <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </Row>\r\n                            </form>\r\n                        </Col>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n            <EmailDeConfirmacao toggle={toggleModalConfirmacao} callback={this.toggleModalConfirmacaoFunc.bind(this)} email={email} reenviar={this.reenviarEmail.bind(this)}> \r\n                √â necess√°rio a confirma√ß√£o de e-mail para prosseguir!\r\n            </EmailDeConfirmacao>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default CadastroTelaInicial","import React from \"react\";\r\nimport {\r\n    Container, Row, Button\r\n} from \"reactstrap\";\r\nimport { GET, Loading, POST } from \"../../componentes/Request\";\r\nimport { ContainerFade, Navegacao, Cabecalho, BarraInicial } from \"../../componentes/corpo\"\r\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {\r\n    withRouter\r\n} from \"react-router-dom\";\r\n\r\nclass RelacionamentoUnidadeCurricular extends React.Component {\r\n    state = {\r\n        areaConhecimento: {},\r\n        unidadeCurricular: [],\r\n        unidadeCurricularListaPesquisa: [],\r\n        unidadeCurricularListaTouch: [],\r\n        cacheUnidadeCurricular: [],\r\n        lista: [],\r\n        loading: true\r\n    }\r\n    id = this.props.match.params.id\r\n    token = this.props.match.params.token\r\n    voltarAreaConhecimento = this.voltarAreaConhecimento.bind(this)\r\n\r\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this)\r\n\r\n    async touchUnidadeCurricular(i, valor) {\r\n        console.log(valor)\r\n        await this.setState({\r\n            unidadeCurricularListaTouch: valor,\r\n            unidadeCurricular:\r\n                this.state.unidadeCurricular.filter(value => {\r\n                    if (valor == null | valor == undefined)\r\n                        return true\r\n                    return value.nome.includes(valor.nome) ? true : false\r\n                })\r\n        })\r\n        if (valor == null | valor == undefined) await this.atualizarUnidadeCurricular()\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let areaConhecimento = await GET(\"areaConhecimento/buscar/\" + this.id + \"/\" + this.token)\r\n        let unidadeCurricular = await GET(\"unidadeCurricular/listar/\" + this.token)\r\n        this.setState({\r\n            areaConhecimento: areaConhecimento,\r\n            unidadeCurricular: unidadeCurricular,\r\n            cacheUnidadeCurricular: unidadeCurricular,\r\n            lista: areaConhecimento.unidadeCurricular.length > 0 ? areaConhecimento.unidadeCurricular : [],\r\n            loading: false\r\n        })\r\n        await this.atualizarLista()\r\n        await this.atualizarUnidadeCurricular()\r\n    }\r\n\r\n    async atualizarLista() {\r\n        let areaConhecimento = await GET(\"areaConhecimento/buscar/\" + this.id + \"/\" + this.token)\r\n        if (areaConhecimento.unidadeCurricular)\r\n            await this.setState({\r\n                lista: areaConhecimento.unidadeCurricular.length > 0 ? areaConhecimento.unidadeCurricular : []\r\n            })\r\n        else\r\n            await this.setState({\r\n                lista: []\r\n            })\r\n    }\r\n\r\n    async atualizarUnidadeCurricular() {\r\n        let unidadeCurricular = await GET(\"unidadeCurricular/listar/\" + this.token)\r\n        this.setState({\r\n            unidadeCurricular: unidadeCurricular.filter((elem, id) => {\r\n                return this.state.lista.filter((elemLista, idLista) => {\r\n                    return elemLista.id == elem.id\r\n                }).length == 0\r\n            })\r\n        })\r\n    }\r\n\r\n    async click(id, decisao) {\r\n        let o = await this.state.lista.filter((elem, index) => {\r\n            return elem.id != id\r\n        })\r\n        if (decisao) {\r\n            await this.state.unidadeCurricular.filter((elem, index) => {\r\n                return elem.id == id\r\n            }).forEach((elem, index) => {\r\n                if (elem.id == id) o.push(elem)\r\n            })\r\n        }\r\n        let req = this.state.areaConhecimento\r\n        req.unidadeCurricular = o\r\n        await POST(\"areaConhecimento/relacionar/\" + this.token, req)\r\n        await this.atualizarLista()\r\n        await this.atualizarUnidadeCurricular()\r\n    }\r\n\r\n    voltarAreaConhecimento() {\r\n        this.props.history.push(\"/cadastro/areaConhecimento\")\r\n    }\r\n    organizaListaPorNome(lista) {\r\n        return lista.sort((a, b) => {\r\n            return a.nome.localeCompare(b.nome);\r\n        })\r\n    }\r\n    render() {\r\n        const { areaConhecimento, unidadeCurricular, lista, loading, unidadeCurricularListaTouch } = this.state\r\n        return (<>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div className=\"corpo\">\r\n                <div>\r\n                    <Cabecalho user={this.props.user} />\r\n                </div>\r\n                <Row>\r\n                    <Navegacao user={this.props.user} backPaste=\"../../\" />\r\n                    <ContainerFade>\r\n                        <div className=\"cadastro\">\r\n                            <div style={{ marginTop: \"15px\", marginBottom: \"15px\", marginLeft: \"5px\" }}>\r\n                                <Button outline type=\"button\" onClick={() => this.voltarAreaConhecimento()} color=\"secondary\" size=\"sm\" className=\"Limpar\">Voltar</Button>\r\n                            </div>\r\n                            <Container>\r\n                                <div className=\"flexbox\">\r\n                                    <div className=\"w-25\">\r\n                                        <div className=\"caixa_detalhe disponivelDescriptionBox\">\r\n                                            <div style={{ textAlign: \"center\" }}>\r\n                                                Area de conhecimento\r\n                                            </div>\r\n                                            <div className=\"flexbox\">\r\n                                                <div className=\"w-25\">\r\n                                                    <b>id:</b>\r\n                                                </div>\r\n                                                <div className=\"w-75\">\r\n                                                    {areaConhecimento.id}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flexbox\">\r\n                                                <div className=\"w-25\">\r\n                                                    <b>Nome:</b>\r\n                                                </div>\r\n                                                <div className=\"w-75\">\r\n                                                    {areaConhecimento.nome}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div>\r\n                                                    <b>Observa√ß√£o</b>\r\n                                                </div>\r\n                                                {areaConhecimento.descricao}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flexbox w-full\">\r\n                                        <div className=\"boxContainer w-50\">\r\n                                            <div className=\"boxtitle\">Unidade curricular</div>\r\n                                            <div className=\"boxItens\">\r\n                                                <Autocomplete\r\n                                                    options={unidadeCurricular}\r\n                                                    value={unidadeCurricularListaTouch}\r\n                                                    onChange={this.touchUnidadeCurricular}\r\n                                                    getOptionLabel={(option) => option.nome}\r\n                                                    renderInput={(params) => (\r\n                                                        <TextField\r\n                                                            {...params}\r\n                                                            variant=\"standard\"\r\n                                                            label=\"Pesquisar\"\r\n                                                            placeholder=\"Escolha...\"\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                                {\r\n                                                    this.organizaListaPorNome(unidadeCurricular).map(res => {\r\n                                                        return (\r\n                                                            <div onClick={() => this.click(res.id, true)} className=\"boxfields\">\r\n                                                                <div className=\"fieldsLabelCenter\">{res.nome}</div>\r\n                                                                <div className=\"fieldsCheck\">\r\n                                                                    <span style={{color:\"green\"}}><FaArrowRight /></span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"boxContainer w-50\">\r\n                                            <div className=\"boxtitle\">Relacionado</div>\r\n                                            <div className=\"boxItens\">\r\n                                                {\r\n                                                    this.organizaListaPorNome(lista).length > 0 ?\r\n                                                        lista.map(res => {\r\n                                                            return (\r\n                                                                <div onClick={() => this.click(res.id, false)} className=\"boxfields\">\r\n                                                                    <div className=\"fieldsCheck\">\r\n                                                                    <span style={{color:\"red\"}}><FaArrowLeft /></span>\r\n                                                                    </div>\r\n                                                                    <div className=\"fieldsLabelCenter\">{res.nome}</div>\r\n                                                                </div>\r\n                                                            )\r\n                                                        }) : null\r\n                                                }\r\n                                                {\r\n                                                    lista.length > 0 ? <BarraInicial exec={false} message='' colspan=\"1\" /> : <BarraInicial exec={true} message={(<span style={{ fontSize: \"14px\" }}>N√£o possui itens para carregar.</span>)} colspan=\"1\" />\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Container>\r\n                        </div>\r\n                    </ContainerFade>\r\n                </Row>\r\n            </div>\r\n        </>)\r\n    }\r\n}\r\n\r\nexport default withRouter(RelacionamentoUnidadeCurricular)","import React from \"react\";\r\nimport {\r\n    Container, Row, Col\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { BotaoEnviar } from \"../componentes/botoes\";\r\nimport { POST, Loading } from \"../componentes/Request\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass EsqueciMinhaSenha extends React.Component {\r\n    state = {\r\n        email: \"\",\r\n        loading: false,\r\n    }\r\n\r\n    //fields inserir\r\n    preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\r\n\r\n    enviaFormulario(event) {\r\n        let st = this.state\r\n        if (\r\n            !st.email.isEmpty()\r\n        ) {\r\n            if (st.email.isEmail()) {\r\n                let o = {};\r\n                o.email = st.email;\r\n                this.enviar(o);\r\n            } else alert(\"Digite um e-mail v√°lido.\")\r\n        } else alert(\"Insira os dados para enviar\")\r\n    }\r\n\r\n    enviar = async o => {\r\n        this.setState({ loading: true });\r\n        await POST(\"gerenciarEmails/esqueciMinhaSenha\", o, undefined, (ok) => {\r\n            if (ok) {\r\n                alert(\"Enviamos um e-mail para o endere√ßo: \"+o.email)\r\n                window.location.href = \"/\";\r\n            }\r\n        }).finally(() => {\r\n            this.setState({ loading: false });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { email, loading } = this.state;\r\n        return <>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div className=\"corpoTelaInicial\">\r\n                <div className=\"cadastro\">\r\n                    <Container>\r\n                        <Col>\r\n                            <form>\r\n                                <Row>\r\n                                    <Col xs={{ size: 8, offset: 2 }}>\r\n                                        <Col className=\"caixa_alerta\">\r\n                                            <p className=\"p_alerta\">Digite o endere√ßo de e-mail que foi usado no seu cadastro,</p>\r\n                                            <p className=\"p_alerta\">Voc√™ poder√° refazer sua senha pelo link que enviaremos para esse endere√ßo.</p>\r\n                                        </Col>\r\n                                        <Col style={{ marginTop: \"15px\" }}>\r\n                                            <InputDefault obrigatorio evento={this.preencheEmail.bind(this)} valor={email} size=\"70\" tipo=\"text\" nome=\"email\" titulo=\"E-mail\" descricao=\"Digite seu e-mail\" />\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <div className=\"botao\" align=\"right\">\r\n                                                <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Col>\r\n                                </Row>\r\n                            </form>\r\n                        </Col>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\nexport default withRouter(EsqueciMinhaSenha)","import React from \"react\";\r\nimport {\r\n    Container, Row, Col\r\n} from \"reactstrap\";\r\nimport { GET, Loading } from \"../componentes/Request\";\r\nimport {\r\n    withRouter\r\n} from \"react-router-dom\";\r\n\r\nclass FinalizarCadastro extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        resultado: null\r\n    }\r\n    voltarTelaInicial = this.voltarTelaInicial.bind(this)\r\n    async componentDidMount() {\r\n        await GET(\"professor/finalizarCadastro/\" + this.props.match.params.token, false).then(() => {\r\n            this.setState({\r\n                loading: false,\r\n                resultado: (<>\r\n                    <Col className=\"caixa_alerta\" style={{ borderColor: \"#00dc00\" }}>\r\n                        <p className=\"p_alerta\" style={{ color: \"#00dc00\" }}>Seu cadastro foi finalizado com sucesso!</p>\r\n                        <p className=\"p_alerta\">Dever√° conseguir se logar no sistema a partir de agora.</p>\r\n                        <p className=\"p_alerta\">Voc√™ pode voltar para a tela de login por este caminho.</p>\r\n                        <button className=\"btn_telaInicial\" type=\"button\" onClick={() => this.voltarTelaInicial()}>Click aqui</button>\r\n                    </Col>\r\n                </>)\r\n            })\r\n        }).catch(err => {\r\n            this.setState({\r\n                loading: false,\r\n                resultado: (<>\r\n                    <Col className=\"caixa_alerta\">\r\n                        <p className=\"p_alerta\" style={{ color: \"rgb(255, 93, 93)\" }}>Seu cadastro n√£o foi finalizado.</p>\r\n                        <p className=\"p_alerta\">Pode ser que o servidor n√£o conseguiu processar sua finaliza√ß√£o ou esteja fora do ar.</p>\r\n                        <p className=\"p_alerta\">Recomendo que tente novamente mais tarde ou entre em contato com um administrador.</p>\r\n                        <p className=\"p_alerta\">Voc√™ pode voltar para a tela de login por este caminho.</p>\r\n                        <button className=\"btn_telaInicial\" type=\"button\" onClick={() => this.voltarTelaInicial()}>Click aqui</button>\r\n                    </Col>\r\n                </>)\r\n            })\r\n            if (err.status === undefined) alert(\"Ops! O servidor n√£o est√° respondendo.\\nPor favor, aguarde um momento e tente novamente.\")\r\n            if (err.status >= 500)\r\n                err.text().then(errorMessage => {\r\n                    console.log(errorMessage)\r\n                    if (errorMessage != undefined && errorMessage == \"USUARIO_JA_CADASTRADO\") {\r\n                        alert(\"Seu cadastro ja foi efetuado, pode realizar seu login.\")\r\n                        window.location.href = \"/\";\r\n                    }\r\n                })\r\n            else\r\n                if (err.status >= 400) alert(\"Ops! Erro: \" + err.status + \" \\nO servidor n√£o conseguiu processar esta requisi√ß√£o.\")\r\n\r\n        })\r\n    }\r\n    voltarTelaInicial() {\r\n        window.location.href = \"/\";\r\n    }\r\n    render() {\r\n        return (<>\r\n            <Loading loading={this.state.loading} message='Carregando ...' />\r\n            <div className=\"corpoTelaInicial\">\r\n                <div className=\"cadastro\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={{ size: 8, offset: 2 }}>\r\n                                {this.state.resultado}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </div>\r\n        </>)\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(FinalizarCadastro)","import React from \"react\";\r\nimport {\r\n    Container, Row, Col\r\n} from \"reactstrap\";\r\nimport InputDefault from \"../componentes/inputsPadroes\";\r\nimport { BotaoEnviar } from \"../componentes/botoes\";\r\nimport { POST, Loading } from \"../componentes/Request\";\r\nimport {\r\n    withRouter\r\n} from \"react-router-dom\";\r\nclass AlterarSenha extends React.Component {\r\n    state = {\r\n        token: \"\",\r\n        senha: \"\",\r\n        confirmar: \"\",\r\n        sucesso: false\r\n    }\r\n\r\n    preencheSenha(senha) { this.setState({ senha }) }\r\n    preencheConfirmar(confirmar) { this.setState({ confirmar }) }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params)\r\n        this.setState({\r\n            token: this.props.match.params.token\r\n        })\r\n    }\r\n\r\n    //fields inserir\r\n    preencheEmail(email) { this.setState({ email: email.toLowerCase().replaceAll(\" \", \"\") }) }\r\n\r\n    enviaFormulario(event) {\r\n        let st = this.state\r\n        if (st.senha.length > 4) {\r\n            if (st.senha.equals(st.confirmar)) {\r\n              let o = {};\r\n              o.token = st.token\r\n              o.senha = st.senha;\r\n              this.enviar(o);\r\n            } else alert(\"\\\"Confirmar\\\" precisa ser exatamente igual a senha.\")\r\n          } else alert(\"A senha precisa ter pelo menos 5 letras, e no m√°ximo 10 letras.\")\r\n    }\r\n\r\n    enviar = async o => {\r\n        this.setState({ loading: true });\r\n        await POST(\"professor/alterarSenha\", o, undefined, (ok) => {\r\n            if (ok) {\r\n                this.setState({\r\n                    sucesso: true\r\n                })\r\n            }\r\n        }).finally(() => {\r\n            this.setState({ loading: false });\r\n        })\r\n    }\r\n    voltarTelaInicial() {\r\n        window.location.href = \"/\";\r\n    }\r\n    render() {\r\n        const { senha, confirmar, loading, token, sucesso } = this.state;\r\n        return (token === \"\" || token === undefined || token === null) ?\r\n            baba(this.voltarTelaInicial.bind(this)) :\r\n            sucesso ?\r\n                novaSenhaSucesso(this.voltarTelaInicial.bind(this)) :\r\n                (<>\r\n                    <Loading loading={loading} message='Carregando ...' />\r\n                    <div className=\"corpoTelaInicial\">\r\n                        <div className=\"cadastro\">\r\n                            <Container>\r\n                                <Col>\r\n                                    <form>\r\n                                        <Row style={{ marginTop: \"15px\" }}>\r\n                                            <Col xs={{ size: 8, offset: 2 }}>\r\n                                                <Col className=\"caixa_alerta\">\r\n                                                    <p className=\"p_alerta\">Digite uma nova senha</p>\r\n                                                </Col>\r\n                                                <Row style={{ marginTop: \"15px\" }}>\r\n                                                    <Col md={{ size: 6 }}>\r\n                                                        <InputDefault obrigatorio evento={this.preencheSenha.bind(this)} valor={senha} size=\"10\" tipo=\"password\" nome=\"senha\" titulo=\"Nova senha\" descricao=\"Digite uma senha nova\" />\r\n                                                    </Col>\r\n                                                    <Col md={{ size: 6 }}>\r\n                                                        <InputDefault obrigatorio evento={this.preencheConfirmar.bind(this)} valor={confirmar} size=\"10\" tipo=\"password\" nome=\"confirmar\" titulo=\"Confirmar\" descricao=\"Confirme sua senha nova\" />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Col>\r\n                                                    <div className=\"botao\" align=\"right\">\r\n                                                        <BotaoEnviar enviar={this.enviaFormulario.bind(this)} />\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </form>\r\n                                </Col>\r\n                            </Container>\r\n                        </div>\r\n                    </div>\r\n                </>)\r\n    }\r\n}\r\n\r\nclass AlterarSenhaFail extends React.Component {\r\n    voltarTelaInicial() {\r\n        window.location.href = \"/\";\r\n    }\r\n    render() {\r\n        return baba(this.voltarTelaInicial.bind(this))\r\n    }\r\n}\r\n\r\nfunction baba(voltarTelaInicial) {\r\n    return (<>\r\n        <div className=\"corpoTelaInicial\">\r\n            <div className=\"cadastro\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={{ size: 8, offset: 2 }}>\r\n                            <Col className=\"caixa_alerta\">\r\n                                <p className=\"p_alerta\">Oi amigo, voc√™ est√° perdido?</p>\r\n                                <p className=\"p_alerta\">Voc√™ pode voltar para a tela de login por este caminho.</p>\r\n                                <button className=\"btn_telaInicial\" type=\"button\" onClick={() => voltarTelaInicial()}>Click aqui</button>\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nfunction novaSenhaSucesso(voltarTelaInicial) {\r\n    return (<>\r\n        <div className=\"corpoTelaInicial\">\r\n            <div className=\"cadastro\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={{ size: 8, offset: 2 }}>\r\n                            <Col className=\"caixa_alerta\" style={{ borderColor: \"#00dc00\" }}>\r\n                                <p className=\"p_alerta\">Sua senha foi alterado com sucesso!</p>\r\n                                <p className=\"p_alerta\">Voc√™ pode voltar para a tela de login por este caminho.</p>\r\n                                <button className=\"btn_telaInicial\" type=\"button\" onClick={() => voltarTelaInicial()}>Click aqui</button>\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nAlterarSenha = withRouter(AlterarSenha)\r\nAlterarSenhaFail = withRouter(AlterarSenhaFail)\r\n\r\nexport { AlterarSenha, AlterarSenhaFail }","import React from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { Row, Input, InputGroup, InputGroupAddon, Button } from \"reactstrap\";\r\nimport { POST, Loading } from \"../componentes/Request\";\r\nimport { ContainerFade, Navegacao, Cabecalho, ModalDetalhe } from \"../componentes/corpo\"\r\n\r\nclass ConsultaDisponibilidade extends React.Component {\r\n    state = {\r\n        lista: [],\r\n        professor: {},\r\n        loading: false,\r\n        count: 0,\r\n        manha: \"\",\r\n        tarde: \"\",\r\n        noite: \"\",\r\n        pesquisa: \"\",\r\n        segunda: false,\r\n        terca: false,\r\n        quarta: false,\r\n        quinta: false,\r\n        sexta: false,\r\n        sabado: false,\r\n        domingo: false,\r\n        modalidade: [],\r\n        areaConhecimento: [],\r\n        unidadeCurricular: [],\r\n        toggle: false\r\n    }\r\n    token = this.props.user.token\r\n\r\n    componentDidMount() {\r\n        this.getListaProfessores()\r\n    }\r\n    setPesquisa(pesquisa) { this.setState({ pesquisa: pesquisa.target.value.toString().limitSize(255) }) }\r\n\r\n    async getListaProfessores() {\r\n        this.setState({ loading: true })\r\n        let st = this.state\r\n        let o = {}\r\n        o.pesquisa = st.pesquisa\r\n        o.segunda = st.segunda\r\n        o.terca = st.terca\r\n        o.quarta = st.quarta\r\n        o.quinta = st.quinta\r\n        o.sexta = st.sexta\r\n        o.sabado = st.sabado\r\n        o.domingo = st.domingo\r\n        let response = await POST(\"disponibilidade/listadisponibilidade/\" + this.token, o)\r\n        console.log(response)\r\n        if (response != null && response != undefined) {\r\n            this.setState({\r\n                lista: response,\r\n            })\r\n        }\r\n\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    async professorInfo(id) {\r\n        await this.setState({\r\n            professor: this.pegaProfessor(id)\r\n        })\r\n        this.setState({ loading: true })\r\n        await this.getDisponibilidade()\r\n        await this.getModalidade()\r\n        await this.getAreaconhecimento()\r\n        await this.getUnidadecurricular()\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    getModalidade() {\r\n        let modalidade = this.state.professor.modalidade\r\n        let lista = []\r\n        for (let i = 0; i < modalidade.length; i++) {\r\n            lista.push(modalidade[i].nome)\r\n        }\r\n        this.setState({\r\n            modalidade: lista\r\n        })\r\n    }\r\n    getAreaconhecimento() {\r\n        let areaConhecimento = this.state.professor.areaconhecimento\r\n        let lista = []\r\n        for (let i = 0; i < areaConhecimento.length; i++) {\r\n            lista.push(areaConhecimento[i].nome)\r\n        }\r\n        this.setState({\r\n            areaConhecimento: lista\r\n        })\r\n    }\r\n    getUnidadecurricular() {\r\n        let unidadeCurricular = this.state.professor.unidadecurricular\r\n        let lista = []\r\n        for (let i = 0; i < unidadeCurricular.length; i++) {\r\n            let o = {}\r\n            o.id = unidadeCurricular[i].id\r\n            o.nome = unidadeCurricular[i].nome\r\n            o.descricao = unidadeCurricular[i].descricao\r\n            lista.push(o)\r\n        }\r\n        this.setState({\r\n            unidadeCurricular: lista\r\n        })\r\n    }\r\n\r\n    pegaProfessor(id) {\r\n        for (let item of this.state.lista) {\r\n            if (item.id == id) {\r\n                return item;\r\n            }\r\n        }\r\n    }\r\n\r\n    getDisponibilidade() {\r\n        let disp = this.state.professor.disponibilidade\r\n        let manha = \"\"\r\n        let tarde = \"\"\r\n        let noite = \"\"\r\n\r\n        if (disp.segM) manha += \"Segunda, \"\r\n        if (disp.terM) manha += \"Ter√ßa, \"\r\n        if (disp.quaM) manha += \"Quarta, \"\r\n        if (disp.quiM) manha += \"Quinta, \"\r\n        if (disp.sexM) manha += \"Sexta, \"\r\n        if (disp.sabM) manha += \"Sabado, \"\r\n        if (disp.domM) manha += \"Domingo, \"\r\n\r\n        if (disp.segT) tarde += \"Segunda, \"\r\n        if (disp.terT) tarde += \"Ter√ßa, \"\r\n        if (disp.quaT) tarde += \"Quarta, \"\r\n        if (disp.quiT) tarde += \"Quinta, \"\r\n        if (disp.sexT) tarde += \"Sexta, \"\r\n        if (disp.sabT) tarde += \"Sabado, \"\r\n        if (disp.domT) tarde += \"Domingo, \"\r\n\r\n        if (disp.segN) noite += \"Segunda, \"\r\n        if (disp.terN) noite += \"Ter√ßa, \"\r\n        if (disp.quaN) noite += \"Quarta, \"\r\n        if (disp.quiN) noite += \"Quinta, \"\r\n        if (disp.sexN) noite += \"Sexta, \"\r\n        if (disp.sabN) noite += \"Sabado, \"\r\n        if (disp.domN) noite += \"Domingo, \"\r\n\r\n        this.setState({\r\n            manha: manha.substr(0, manha.length - 2),\r\n            tarde: tarde.substr(0, tarde.length - 2),\r\n            noite: noite.substr(0, noite.length - 2),\r\n        })\r\n    }\r\n\r\n    async setcheck(param) {\r\n        switch (param) {\r\n            case \"segunda\": await this.setState(dia => ({ segunda: !dia.segunda })); break;\r\n            case \"terca\": await this.setState(dia => ({ terca: !dia.terca })); break;\r\n            case \"quarta\": await this.setState(dia => ({ quarta: !dia.quarta })); break;\r\n            case \"quinta\": await this.setState(dia => ({ quinta: !dia.quinta })); break;\r\n            case \"sexta\": await this.setState(dia => ({ sexta: !dia.sexta })); break;\r\n            case \"sabado\": await this.setState(dia => ({ sabado: !dia.sabado })); break;\r\n            case \"domingo\": await this.setState(dia => ({ domingo: !dia.domingo })); break;\r\n        }\r\n        this.getListaProfessores()\r\n    }\r\n\r\n\r\n    render() {\r\n        const { loading, professor, pesquisa, manha, tarde, noite, segunda, terca, quarta, quinta, sabado, sexta, domingo, modalidade, areaConhecimento, unidadeCurricular } = this.state\r\n\r\n        return <div>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div>\r\n                <Cabecalho user={this.props.user} />\r\n            </div>\r\n            <div className=\"corpo\">\r\n                <Row>\r\n                    <Navegacao user={this.props.user} />\r\n                    <ContainerFade>\r\n                        <Row>\r\n                            <div className=\"titulo\">\r\n                                <h1>Consulta de disponibilidade</h1>\r\n                            </div>\r\n                        </Row>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"filtroInputDisponibilidade\">\r\n                                <InputGroup className=\"w-50\">\r\n                                    <Input value={pesquisa} onChange={this.setPesquisa.bind(this)} name=\"pesquisa\" placeholder=\"Barra de pesquisa\" />\r\n                                    <InputGroupAddon addonType=\"append\">\r\n                                        <Button color=\"secondary\" onClick={() => this.getListaProfessores()}>\r\n                                            <FaSearch />\r\n                                        </Button>\r\n                                    </InputGroupAddon>\r\n                                </InputGroup>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flexbox filtroSemanaButtons\">\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"segunda\")} className=\"filtroDivSemana w-full\" outline>Segunda\r\n                                    <Input checked={segunda} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"terca\")} className=\"filtroDivSemana w-full \" outline>Ter√ßa\r\n                                    <Input checked={terca} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"quarta\")} className=\"filtroDivSemana w-full \" outline>Quarta\r\n                                    <Input checked={quarta} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"quinta\")} className=\"filtroDivSemana w-full \" outline>Quinta\r\n                                    <Input checked={quinta} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"sexta\")} className=\"filtroDivSemana w-full \" outline>Sexta\r\n                                    <Input checked={sexta} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"sabado\")} className=\"filtroDivSemana w-full \" outline>Sabado\r\n                                    <Input checked={sabado} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btn btn-outline-secondary w-142857143 boxtitle flexbox m-5 \">\r\n                                <div onClick={() => this.setcheck(\"domingo\")} className=\"filtroDivSemana w-full \" outline>Domingo\r\n                                    <Input checked={domingo} type=\"checkbox\" id=\"check\" name=\"check\" className=\"checkSemana\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"w-3\">\r\n                                <div className=\"boxContainer\" style={{ backgroundColor: \"rgba(144,238,144)\" }}>\r\n                                    <div className=\"boxtitle\">Manh√£</div>\r\n                                    <div className=\"boxItens\">\r\n                                        {\r\n                                            this.state.lista\r\n                                                .filter(res => {\r\n                                                    let boo = false;\r\n                                                    if (segunda) boo = true;\r\n                                                    if (terca) boo = true;\r\n                                                    if (quarta) boo = true;\r\n                                                    if (quinta) boo = true;\r\n                                                    if (sexta) boo = true;\r\n                                                    if (sabado) boo = true;\r\n                                                    if (domingo) boo = true;\r\n\r\n                                                    if (boo) {\r\n                                                        return (res.disponibilidade.segM && segunda) ||\r\n                                                            (res.disponibilidade.terM && terca) ||\r\n                                                            (res.disponibilidade.quaM && quarta) ||\r\n                                                            (res.disponibilidade.quiM && quinta) ||\r\n                                                            (res.disponibilidade.sexM && sexta) ||\r\n                                                            (res.disponibilidade.sabM && sabado) ||\r\n                                                            (res.disponibilidade.domM && domingo)\r\n                                                    }\r\n\r\n                                                    return res.disponibilidade.segM || res.disponibilidade.terM || res.disponibilidade.quaM\r\n                                                        || res.disponibilidade.quiM || res.disponibilidade.sexM\r\n                                                        || res.disponibilidade.sabM || res.disponibilidade.domM\r\n                                                }).map(res => {\r\n                                                    return (\r\n                                                        <div className=\"boxfields\">\r\n                                                            <div className=\"fieldsLabel\">{res.nome}</div>\r\n                                                            <div className=\"iconLabel\">\r\n                                                                <ModalDetalhe\r\n                                                                    professor={professor}\r\n                                                                    manha={manha}\r\n                                                                    tarde={tarde}\r\n                                                                    noite={noite}\r\n                                                                    modalidade={modalidade}\r\n                                                                    areaConhecimento={areaConhecimento}\r\n                                                                    unidadeCurricular={unidadeCurricular}\r\n                                                                    id={res.id}\r\n                                                                    redirect={this.professorInfo.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w-3\">\r\n                                <div className=\"boxContainer\" style={{ backgroundColor: \"rgba(240,230,140)\" }}>\r\n                                    <div className=\"boxtitle\">Tarde</div>\r\n                                    <div className=\"boxItens\">\r\n                                        {\r\n                                            this.state.lista\r\n                                                .filter(res => {\r\n                                                    let boo = false;\r\n                                                    if (segunda) boo = true;\r\n                                                    if (terca) boo = true;\r\n                                                    if (quarta) boo = true;\r\n                                                    if (quinta) boo = true;\r\n                                                    if (sexta) boo = true;\r\n                                                    if (sabado) boo = true;\r\n                                                    if (domingo) boo = true;\r\n\r\n                                                    if (boo) {\r\n                                                        return (res.disponibilidade.segT && segunda) ||\r\n                                                            (res.disponibilidade.terT && terca) ||\r\n                                                            (res.disponibilidade.quaT && quarta) ||\r\n                                                            (res.disponibilidade.quiT && quinta) ||\r\n                                                            (res.disponibilidade.sexT && sexta) ||\r\n                                                            (res.disponibilidade.sabT && sabado) ||\r\n                                                            (res.disponibilidade.domT && domingo)\r\n                                                    }\r\n                                                    return res.disponibilidade.segT || res.disponibilidade.terT || res.disponibilidade.quaT\r\n                                                        || res.disponibilidade.quiT || res.disponibilidade.sexT\r\n                                                        || res.disponibilidade.sabT || res.disponibilidade.domT\r\n                                                }).map(res => {\r\n                                                    return (\r\n                                                        <div className=\"boxfields\">\r\n                                                            <div className=\"fieldsLabel\">{res.nome}</div>\r\n                                                            <div className=\"iconLabel\">\r\n                                                                <ModalDetalhe\r\n                                                                    professor={professor}\r\n                                                                    manha={manha}\r\n                                                                    tarde={tarde}\r\n                                                                    noite={noite}\r\n                                                                    modalidade={modalidade}\r\n                                                                    areaConhecimento={areaConhecimento}\r\n                                                                    unidadeCurricular={unidadeCurricular}\r\n                                                                    id={res.id}\r\n                                                                    redirect={this.professorInfo.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w-3\">\r\n                                <div className=\"boxContainer\" style={{ backgroundColor: \"rgba(176,196,222)\" }}>\r\n                                    <div className=\"boxtitle\">Noite</div>\r\n                                    <div className=\"boxItens\">\r\n                                        {\r\n                                            this.state.lista\r\n                                                .filter(res => {\r\n                                                    let boo = false;\r\n                                                    if (segunda) boo = true;\r\n                                                    if (terca) boo = true;\r\n                                                    if (quarta) boo = true;\r\n                                                    if (quinta) boo = true;\r\n                                                    if (sexta) boo = true;\r\n                                                    if (sabado) boo = true;\r\n                                                    if (domingo) boo = true;\r\n\r\n                                                    if (boo) {\r\n                                                        return (res.disponibilidade.segN && segunda) ||\r\n                                                            (res.disponibilidade.terN && terca) ||\r\n                                                            (res.disponibilidade.quaN && quarta) ||\r\n                                                            (res.disponibilidade.quiN && quinta) ||\r\n                                                            (res.disponibilidade.sexN && sexta) ||\r\n                                                            (res.disponibilidade.sabN && sabado) ||\r\n                                                            (res.disponibilidade.domN && domingo)\r\n                                                    }\r\n                                                    return res.disponibilidade.segN || res.disponibilidade.terN || res.disponibilidade.quaN\r\n                                                        || res.disponibilidade.quiN || res.disponibilidade.sexN\r\n                                                        || res.disponibilidade.sabN || res.disponibilidade.domN\r\n                                                }).map(res => {\r\n                                                    return (\r\n                                                        <div className=\"boxfields\">\r\n                                                            <div className=\"fieldsLabel\">{res.nome}</div>\r\n                                                            <div className=\"iconLabel\">\r\n                                                                <ModalDetalhe\r\n                                                                    professor={professor}\r\n                                                                    manha={manha}\r\n                                                                    tarde={tarde}\r\n                                                                    noite={noite}\r\n                                                                    modalidade={modalidade}\r\n                                                                    areaConhecimento={areaConhecimento}\r\n                                                                    unidadeCurricular={unidadeCurricular}\r\n                                                                    id={res.id}\r\n                                                                    redirect={this.professorInfo.bind(this)}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    )\r\n                                                })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ContainerFade>\r\n                </Row>\r\n            </div>\r\n        </div >\r\n    };\r\n}\r\n\r\nexport default ConsultaDisponibilidade\r\n\r\n","import React from \"react\";\r\nimport { Row, Table } from \"reactstrap\";\r\nimport { POST, GET, Loading } from \"../componentes/Request\";\r\nimport { BarraInicial, ContainerFade, Navegacao, Cabecalho, BarraDePesquisa, ModalDetalhe } from \"../componentes/corpo\"\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ArrayCompare } from \"../componentes/utilidadePublica\";\r\nimport Paginacao from \"../componentes/paginacao\";\r\n\r\nclass ConsultaCompetencia extends React.Component {\r\n    state = {\r\n        lista: [],\r\n        professor: {},\r\n        loading: false,\r\n        modal: false,\r\n        count: 0,\r\n        manha: \"\",\r\n        tarde: \"\",\r\n        noite: \"\",\r\n        pesquisa: \"\",\r\n        modalidade: [],\r\n        areaConhecimento: [],\r\n        unidadeCurricular: [],\r\n        valueModalidade: {},\r\n        valueAreaConhecimento: {},\r\n        valueUnidadeCurricular: {},\r\n        professorModalidade: [],\r\n        professorAreaconhecimento: [],\r\n        professorUnidadecurricular: [],\r\n        listaCorrente: [],\r\n        listaCache: [],\r\n        barraPesquisa: \"\",\r\n        toggle:false\r\n    }\r\n    token = this.props.user.token\r\n    touchModalidade = this.touchModalidade.bind(this);\r\n    touchAreaConhecimento = this.touchAreaConhecimento.bind(this);\r\n    touchUnidadeCurricular = this.touchUnidadeCurricular.bind(this);\r\n\r\n    preencheBarraDePesquisa(barraPesquisa) { this.setState({ barraPesquisa }) }\r\n\r\n    touchModalidade(e, valueModalidade) {\r\n        this.state.valueModalidade = this.amountList(valueModalidade)\r\n        this.getListaProfessores()\r\n    }\r\n    touchAreaConhecimento(e, valueAreaConhecimento) {\r\n        this.state.valueAreaConhecimento = this.amountList(valueAreaConhecimento)\r\n\r\n        this.getListaProfessores()\r\n    }\r\n    touchUnidadeCurricular(e, valueUnidadeCurricular) {\r\n        this.state.valueUnidadeCurricular = this.amountList(valueUnidadeCurricular)\r\n        this.getListaProfessores()\r\n    }\r\n\r\n    amountList(listaAntiga) {\r\n\r\n        let listNova = [];\r\n        for (let i in listaAntiga) {\r\n            let o = {}\r\n            o.id = listaAntiga[i].id\r\n            o.status = 1\r\n            listNova.push(o)\r\n        }\r\n\r\n        return listNova\r\n    }\r\n\r\n    async professorInfo(id) {\r\n        await this.setState({\r\n            professor: this.pegaProfessor(id)\r\n        })\r\n        this.setState({ loading: true })\r\n        await this.getDisponibilidade()\r\n        await this.getProfessorModalidade()\r\n        await this.getProfessorAreaconhecimento()\r\n        await this.getProfessorUnidadecurricular()\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n\r\n    getProfessorModalidade() {\r\n        let professorModalidade = this.state.professor.modalidade\r\n        let lista = []\r\n        for (let i = 0; i < professorModalidade.length; i++) {\r\n            lista.push(professorModalidade[i].nome)\r\n        }\r\n        this.setState({\r\n            professorModalidade: lista\r\n        })\r\n    }\r\n    getProfessorAreaconhecimento() {\r\n        let professorAreaconhecimento = this.state.professor.areaconhecimento\r\n        let lista = []\r\n        for (let i = 0; i < professorAreaconhecimento.length; i++) {\r\n            lista.push(professorAreaconhecimento[i].nome)\r\n        }\r\n        this.setState({\r\n            professorAreaconhecimento: lista\r\n        })\r\n    }\r\n    getProfessorUnidadecurricular() {\r\n        let professorUnidadecurricular = this.state.professor.unidadecurricular\r\n        let lista = []\r\n        for (let i = 0; i < professorUnidadecurricular.length; i++) {\r\n            let o = {}\r\n            o.id = professorUnidadecurricular[i].id\r\n            o.nome = professorUnidadecurricular[i].nome\r\n            o.descricao = professorUnidadecurricular[i].descricao\r\n            lista.push(o)\r\n        }\r\n        this.setState({\r\n            professorUnidadecurricular: lista\r\n        })\r\n    }\r\n\r\n    getDisponibilidade() {\r\n        let disp = this.state.professor.disponibilidade\r\n        let manha = \"\"\r\n        let tarde = \"\"\r\n        let noite = \"\"\r\n\r\n        if (disp.segM) manha += \"Segunda, \"\r\n        if (disp.terM) manha += \"Ter√ßa, \"\r\n        if (disp.quaM) manha += \"Quarta, \"\r\n        if (disp.quiM) manha += \"Quinta, \"\r\n        if (disp.sexM) manha += \"Sexta, \"\r\n        if (disp.sabM) manha += \"Sabado, \"\r\n        if (disp.domM) manha += \"Domingo, \"\r\n\r\n        if (disp.segT) tarde += \"Segunda, \"\r\n        if (disp.terT) tarde += \"Ter√ßa, \"\r\n        if (disp.quaT) tarde += \"Quarta, \"\r\n        if (disp.quiT) tarde += \"Quinta, \"\r\n        if (disp.sexT) tarde += \"Sexta, \"\r\n        if (disp.sabT) tarde += \"Sabado, \"\r\n        if (disp.domT) tarde += \"Domingo, \"\r\n\r\n        if (disp.segN) noite += \"Segunda, \"\r\n        if (disp.terN) noite += \"Ter√ßa, \"\r\n        if (disp.quaN) noite += \"Quarta, \"\r\n        if (disp.quiN) noite += \"Quinta, \"\r\n        if (disp.sexN) noite += \"Sexta, \"\r\n        if (disp.sabN) noite += \"Sabado, \"\r\n        if (disp.domN) noite += \"Domingo, \"\r\n\r\n        this.setState({\r\n            manha: manha.substr(0, manha.length - 2),\r\n            tarde: tarde.substr(0, tarde.length - 2),\r\n            noite: noite.substr(0, noite.length - 2),\r\n        })\r\n    }\r\n\r\n\r\n    pegaProfessor(id) {\r\n        for (let item of this.state.lista) {\r\n            if (item.id == id) {\r\n                return item;\r\n            }\r\n        }\r\n    }\r\n\r\n    async getListaProfessores() {\r\n        this.setState({ loading: true })\r\n        let st = this.state\r\n        let o = {}\r\n        o.modalidade = this.newArray(st.valueModalidade)\r\n        o.areaconhecimento = this.newArray(st.valueAreaConhecimento)\r\n        o.unidadecurricular = this.newArray(st.valueUnidadeCurricular)\r\n        let response = await POST(\"competencia/listarItens/\" + this.token, o)\r\n        if (response != null && response != undefined) {\r\n            this.setState({\r\n                lista: response,\r\n                listaCache: response,\r\n            })\r\n        }\r\n\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    newArray(arrayVelho) {\r\n\r\n        let arrayNovo = []\r\n\r\n        for (var p in arrayVelho) {\r\n            arrayNovo.push(arrayVelho[p])\r\n        }\r\n\r\n        return arrayNovo\r\n    }\r\n\r\n    async getModalidade() {\r\n        await GET(\"modalidade/listar/\" + this.token)\r\n            .then(response => {\r\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n                this.setState({\r\n                    modalidade: response,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({\r\n                    modalidade: [],\r\n                })\r\n            }).finally(() => {\r\n                if (this.state.modalidade.length == 0) return false\r\n\r\n                let lista = [];\r\n                for (let i in this.state.modalidade) {\r\n                    let listaM = []\r\n                    listaM['nome'] = this.state.modalidade[i].nome\r\n                    listaM['id'] = this.state.modalidade[i].id\r\n\r\n                    lista.push(listaM)\r\n                }\r\n                this.setState({\r\n                    modalidade: lista\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    async getAreaconhecimento() {\r\n        await GET(\"areaConhecimento/listar/\" + this.token)\r\n            .then(response => {\r\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n                this.setState({\r\n                    areaConhecimento: response,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({\r\n                    areaConhecimento: [],\r\n                })\r\n            }).finally(() => {\r\n                if (this.state.areaConhecimento.length == 0) return false\r\n\r\n                let lista = [];\r\n                for (let i in this.state.areaConhecimento) {\r\n                    let listaM = []\r\n                    listaM['nome'] = this.state.areaConhecimento[i].nome\r\n                    listaM['id'] = this.state.areaConhecimento[i].id\r\n\r\n                    lista.push(listaM)\r\n                }\r\n                this.setState({\r\n                    areaConhecimento: lista\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    async getUnidadecurricular() {\r\n        await GET(\"unidadeCurricular/listar/\" + this.token)\r\n            .then(response => {\r\n                if (response === undefined | response.length === 0) throw new Error('Erro lista vazia.')\r\n                this.setState({\r\n                    unidadeCurricular: response,\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                this.setState({\r\n                    unidadeCurricular: [],\r\n                })\r\n            }).finally(() => {\r\n                if (this.state.unidadeCurricular.length == 0) return false\r\n\r\n                let lista = [];\r\n                for (let i in this.state.unidadeCurricular) {\r\n                    let listaM = []\r\n                    listaM['nome'] = this.state.unidadeCurricular[i].nome\r\n                    listaM['id'] = this.state.unidadeCurricular[i].id\r\n\r\n                    lista.push(listaM)\r\n                }\r\n                this.setState({\r\n                    unidadeCurricular: lista\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ loading: true })\r\n        await this.getModalidade()\r\n        await this.getAreaconhecimento()\r\n        await this.getUnidadecurricular()\r\n        await this.getListaProfessores()\r\n        this.setState({ loading: false })\r\n    }\r\n\r\n    getRetornaListaCorrente(listaCorrente) {\r\n        if (!ArrayCompare(listaCorrente, this.state.listaCorrente)) {\r\n            this.setState({ listaCorrente });\r\n        }\r\n    }\r\n\r\n    async barraPesquisa(listaFiltrada) {\r\n        if (!ArrayCompare(this.state.lista, listaFiltrada)) {\r\n            await this.setState({\r\n                lista: listaFiltrada\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loading, professor, manha, tarde, noite,\r\n            valueModalidade, valueAreaConhecimento, valueUnidadeCurricular,\r\n            modalidade, areaConhecimento, unidadeCurricular,\r\n            professorModalidade, professorAreaconhecimento, professorUnidadecurricular } = this.state\r\n\r\n        return <div>\r\n            <Loading loading={loading} message='Carregando ...' />\r\n            <div>\r\n                <Cabecalho user={this.props.user} />\r\n            </div>\r\n            <div className=\"corpo\">\r\n                <Row>\r\n                    <Navegacao user={this.props.user} />\r\n                    <ContainerFade>\r\n                        <Row>\r\n                            <div className=\"titulo\">\r\n                                <h1>Consulta de compet√™ncias</h1>\r\n                            </div>\r\n                        </Row>\r\n                        <div className=\"flexbox\">\r\n                            <div className=\"filtroInputDisponibilidade\">\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={modalidade}\r\n                                    value={valueModalidade['modalidade']}\r\n                                    onChange={this.touchModalidade}\r\n                                    getOptionLabel={(option) => option.nome}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"standard\"\r\n                                            label=\"Modalidades\"\r\n                                            placeholder=\"Escolha...\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                            <div className=\"filtroInputDisponibilidade\">\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={areaConhecimento}\r\n                                    value={valueAreaConhecimento['areaconhecimento']}\r\n                                    onChange={this.touchAreaConhecimento}\r\n                                    getOptionLabel={(option) => option.nome}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"standard\"\r\n                                            label=\"√Årea de conhecimento\"\r\n                                            placeholder=\"Escolha...\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                            <div className=\"filtroInputDisponibilidade\">\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={unidadeCurricular}\r\n                                    value={valueUnidadeCurricular['unidadecurricular']}\r\n                                    onChange={this.touchUnidadeCurricular}\r\n                                    getOptionLabel={(option) => option.nome}\r\n                                    renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"standard\"\r\n                                            label=\"Unidade de conhecimento\"\r\n                                            placeholder=\"Escolha...\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"div_tabela\">\r\n                            <div className=\"barra_menu\">\r\n                                <div className=\"w-50\">\r\n                                    <BarraDePesquisa\r\n                                        funcPesquisa={this.barraPesquisa.bind(this)}\r\n                                        pesquisa={this.state.barraPesquisa}\r\n                                        attBarra={this.preencheBarraDePesquisa.bind(this)}\r\n                                        indicador=\"nome\"\r\n                                        lista={this.state.listaCache} />\r\n                                </div>\r\n                                <div className=\"w-50\">\r\n                                    <Paginacao\r\n                                        lista={this.state.lista}\r\n                                        total={this.state.lista.length}\r\n                                        retornaLista={this.getRetornaListaCorrente.bind(this)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <Table>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Professor</th>\r\n                                        <th>Matr√≠cula</th>\r\n                                        <th>Tipo</th>\r\n                                        <th>E-mail</th>\r\n                                        <th>sobre</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.listaCorrente.map(o => {\r\n                                        return (\r\n                                            <tr key={o.id}>\r\n                                                <td>{o.id}</td>\r\n                                                <td>{o.nome}</td>\r\n                                                <td>{o.matricula}</td>\r\n                                                <td>{o.tipo}</td>\r\n                                                <td>{o.email}</td>\r\n                                                <ModalDetalhe\r\n                                                    professor={professor}\r\n                                                    manha={manha}\r\n                                                    tarde={tarde}\r\n                                                    noite={noite}\r\n                                                    modalidade={professorModalidade}\r\n                                                    areaConhecimento={professorAreaconhecimento}\r\n                                                    unidadeCurricular={professorUnidadecurricular}\r\n                                                    destaque={valueUnidadeCurricular}\r\n                                                    id={o.id}\r\n                                                    redirect={this.professorInfo.bind(this)}\r\n                                                    onClick={this.state.toggle = !this.state.toggle}\r\n                                                />\r\n                                            </tr>\r\n                                        );\r\n                                    })}\r\n                                    {\r\n                                        this.state.lista.length > 0 ? <BarraInicial exec={false} message='N√£o possui itens para carregar.' colspan=\"5\" /> : <BarraInicial exec={true} message='N√£o possui itens para carregar.' colspan=\"5\" />\r\n                                    }\r\n\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </ContainerFade>\r\n                </Row>\r\n            </div>\r\n\r\n        </div >\r\n    };\r\n\r\n}\r\n\r\nexport default ConsultaCompetencia\r\n\r\n","import React from \"react\"\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Logout  extends React.Component {\r\n    componentDidMount(){\r\n        this.props.logout()\r\n        this.props.history.push(\"/\")\r\n    }\r\n    render(){\r\n        return <></>\r\n    }\r\n}\r\n\r\nexport default withRouter(Logout)","import React from 'react'\r\nimport Login from '../telas/login';\r\nimport TelaInicial from '../telas/home';\r\nimport Modalidade from '../telas/modalidade';\r\nimport Professor from '../telas/professor';\r\nimport AreaConhecimento from '../telas/areaConhecimento';\r\nimport UnidadeCurricular from '../telas/unidadeCurricular';\r\nimport GerenciarEmailsProfessores from '../telas/gerenciarEmailsProfessores';\r\nimport Disponibilidade from '../telas/disponibilidade';\r\nimport Competencia from '../telas/gerenciarCompetencia';\r\nimport CadastroTelaInicial from '../telas/cadastroTelaInicial';\r\nimport RelacionamentoUnidadeCurricular from '../telas/componentes/relacionamentoUnidadeCurricular';\r\nimport EsqueciMinhaSenha from '../telas/esqueciMinhaSenha';\r\nimport FinalizarCadastro from '../telas/finalizarCadastro';\r\nimport { AlterarSenha, AlterarSenhaFail } from '../telas/alterarSenha';\r\nimport ConsultaDisponibilidade from '../telas/ConsultaDisponibilidade';\r\nimport ConsultaCompetencia from '../telas/ConsultaCompetencia';\r\nimport Logout from '../telas/logout';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie';\r\n\r\nconst userContext = React.createContext({\r\n  id: '',\r\n  usuario: '',\r\n  permissao: '',\r\n  token: ''\r\n});\r\n\r\nclass Autenticacao extends React.Component {\r\n  state = {\r\n    id: \"\",\r\n    usuario: \"\",\r\n    permissao: \"\",\r\n    token: \"\",\r\n    inOut: false,\r\n    memoriaUrl: () => {\r\n      return Cookies.get(\"ultimaPagina\")\r\n    },\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.setUserWithCookies()\r\n  }\r\n\r\n  async setId(id) {\r\n    await this.setState({ id })\r\n  }\r\n  async setUsuario(usuario) {\r\n    await this.setState({ usuario })\r\n  }\r\n  async setPermissao(permissao) {\r\n    await this.setState({ permissao })\r\n  }\r\n  async setToken(token) {\r\n    await this.setState({ token })\r\n  }\r\n\r\n  login() {\r\n    this.setState({\r\n      inOut: true\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.setState({\r\n      id: \"\",\r\n      usuario: \"\",\r\n      permissao: \"\",\r\n      token: \"\",\r\n      inOut: false,\r\n    })\r\n    Cookies.remove(\"id\")\r\n    Cookies.remove(\"usuario\")\r\n    Cookies.remove(\"permissao\")\r\n    Cookies.remove(\"token\")\r\n    Cookies.remove(\"ultimaPagina\")\r\n  }\r\n\r\n  async setCookies() {\r\n    await Cookies.set(\"id\", this.state.id)\r\n    await Cookies.set(\"usuario\", this.state.usuario)\r\n    await Cookies.set(\"permissao\", this.state.permissao)\r\n    await Cookies.set(\"token\", this.state.token)\r\n  }\r\n\r\n  async setUserWithCookies() {\r\n    if (Cookies.get(\"id\") == undefined ||\r\n      Cookies.get(\"usuario\") == undefined ||\r\n      Cookies.get(\"permissao\") == undefined ||\r\n      Cookies.get(\"token\") == undefined)\r\n      return false;\r\n\r\n    await this.setState({\r\n      id: Cookies.get(\"id\"),\r\n      usuario: Cookies.get(\"usuario\"),\r\n      permissao: Cookies.get(\"permissao\"),\r\n      token: Cookies.get(\"token\"),\r\n      inOut: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { inOut } = this.state\r\n    return (\r\n      <>\r\n        <userContext.Provider value={this.state}>\r\n          <userContext.Consumer>\r\n            {\r\n              (value) => (\r\n                <Router>\r\n                  <Switch>\r\n                    <Route path=\"/\" exact={true} >\r\n                      <Login\r\n                        user={value}\r\n                        setId={this.setId.bind(this)}\r\n                        setUsuario={this.setUsuario.bind(this)}\r\n                        setPermissao={this.setPermissao.bind(this)}\r\n                        setToken={this.setToken.bind(this)}\r\n                        login={this.login.bind(this)}\r\n                        setCookies={this.setCookies.bind(this)} />\r\n                    </Route>\r\n                    <Route path=\"/cadastroTelaInicial\">\r\n                      <CadastroTelaInicial user={value} />\r\n                    </Route>\r\n                    <Route path=\"/esqueciMinhaSenha\" >\r\n                      <EsqueciMinhaSenha user={value} />\r\n                    </Route>\r\n                    <Route path=\"/alterarSenha/:token\">\r\n                      <AlterarSenha user={value} />\r\n                    </Route>\r\n                    <Route path=\"/alterarSenha\">\r\n                      <AlterarSenhaFail user={value} />\r\n                    </Route>\r\n                    <Route path=\"/finalizarCadastro/:token\">\r\n                      <FinalizarCadastro user={value} />\r\n                    </Route>\r\n                    <Route path=\"/logout\">\r\n                      <Logout user={value} logout={this.logout.bind(this)} />\r\n                    </Route>\r\n                    <RotaPrivada inOut={inOut} path=\"/home\" >\r\n                      <TelaInicial user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/relacionamentoUnidadeCurricular/:id/:token\" >\r\n                      <RelacionamentoUnidadeCurricular user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/professor\">\r\n                      <Professor user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/modalidade\">\r\n                      <Modalidade user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/areaConhecimento\">\r\n                      <AreaConhecimento user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/cadastro/unidadeCurricular\">\r\n                      <UnidadeCurricular user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/processo/gerenciaremailsprofessores\">\r\n                      <GerenciarEmailsProfessores user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/processo/disponibilidade\">\r\n                      <Disponibilidade user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/processo/competencia\">\r\n                      <Competencia user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/consulta/consultadisponibilidade\">\r\n                      <ConsultaDisponibilidade user={value} />\r\n                    </RotaPrivada>\r\n                    <RotaPrivada inOut={inOut} path=\"/consulta/consultacompetencia\">\r\n                      <ConsultaCompetencia user={value} />\r\n                    </RotaPrivada>\r\n                  </Switch>\r\n                </ Router>\r\n              )\r\n            }\r\n          </userContext.Consumer>\r\n        </userContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Autenticacao\r\nexport class RotaPrivada extends React.Component {\r\n  render() {\r\n    const { inOut, path } = this.props\r\n    return (\r\n      <Route path={path} >\r\n        {\r\n          inOut ? (this.props.children) :\r\n            (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/\",\r\n                }}\r\n              />\r\n            )\r\n        }\r\n      </Route>\r\n\r\n    )\r\n  }\r\n}\r\n","\nimport React from 'react';\nimport Autenticacao from \"./componentes/Autenticacao\"\n\nexport default class App extends React.Component {\n    render() {\n        return <Autenticacao />\n    }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport * as serviceWorker from './serviceWorker';\nimport './estilos.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/senai.a6602da5.png\";","module.exports = __webpack_public_path__ + \"static/media/sesi.c7e9bfce.png\";"],"sourceRoot":""}